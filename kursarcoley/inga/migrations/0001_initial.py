# -*- coding: utf-8 -*-
# Generated by Django 1.9.7 on 2016-07-02 10:08
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Chemistry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chemistry_number', models.CharField(max_length=100)),
                ('date', models.DateField()),
                ('size', models.TextField()),
                ('light', models.TextField()),
                ('exp_min', models.TextField()),
                ('exp_max', models.TextField()),
                ('height', models.FloatField()),
                ('dbh', models.TextField()),
                ('fwg', models.TextField()),
                ('age', models.TextField()),
                ('use_field', models.TextField()),
                ('cur_w', models.FloatField()),
                ('vial_w', models.FloatField()),
                ('unused_material', models.FloatField()),
                ('box_number', models.TextField()),
                ('number_plants', models.TextField()),
                ('notes', models.TextField()),
                ('status', models.TextField()),
                ('extracted', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Chlorophyll',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('percent_exposed', models.IntegerField()),
                ('size', models.TextField()),
                ('light', models.TextField()),
                ('spadd', models.IntegerField()),
                ('chl_mg_dm2', models.FloatField()),
                ('notes', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Converted',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('converted_file', models.FileField(upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='DNA',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sequence', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Expansion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Extraction',
            fields=[
                ('extraction_number', models.IntegerField(primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('method', models.FloatField()),
                ('chemist', models.CharField(max_length=20)),
                ('notebook_number', models.IntegerField()),
                ('extraction_notebook_number', models.IntegerField()),
                ('page_number', models.IntegerField()),
                ('box', models.CharField(max_length=20)),
                ('comments', models.TextField()),
                ('chemistry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inga.Chemistry')),
                ('other_chemistry', models.ManyToManyField(related_name='other_chemistry', to='inga.Chemistry')),
                ('parent_extraction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inga.Extraction')),
            ],
        ),
        migrations.CreateModel(
            name='ExtractionWeight',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attribute', models.CharField(max_length=20)),
                ('weight', models.FloatField()),
                ('extraction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inga.Extraction')),
            ],
        ),
        migrations.CreateModel(
            name='ExtrafloralNectaries',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('basal_mm', models.FloatField()),
                ('mid_mm', models.FloatField()),
                ('apical_mm', models.FloatField()),
                ('color', models.CharField(max_length=20)),
                ('shape', models.TextField()),
                ('efn_type', models.TextField()),
                ('xEFN_mm', models.FloatField()),
                ('notes', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Field',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('original_id', models.IntegerField()),
                ('evm', models.TextField()),
                ('exp_min', models.TextField()),
                ('exp_max', models.TextField()),
                ('efn', models.IntegerField()),
                ('ants', models.IntegerField()),
                ('ants_efn', models.FloatField()),
                ('ant_collection', models.TextField()),
                ('total_herbivores', models.IntegerField()),
                ('notes', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Hairs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='HerbivoreCollectionObservation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('herbivores', models.IntegerField()),
                ('herbivores_total', models.IntegerField()),
                ('family', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='HerbivoreDNA',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dna', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='HerbivorePhotos',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.FileField(upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='HerbivoreSpecies',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('motu', models.TextField()),
                ('analysis', models.TextField()),
                ('sequence', models.TextField()),
                ('la_motu', models.TextField()),
                ('blasting_family', models.TextField()),
                ('blasting_subfamily', models.TextField()),
                ('blasting_genus', models.TextField()),
                ('percentage', models.IntegerField()),
                ('bin', models.TextField()),
                ('notes_on_host', models.TextField()),
                ('notes', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='HerbivoreSpeciesObservation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_herbivores', models.IntegerField()),
                ('species', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inga.HerbivoreSpecies')),
            ],
        ),
        migrations.CreateModel(
            name='HerbivoreVoucher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('species', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inga.HerbivoreSpecies')),
            ],
        ),
        migrations.CreateModel(
            name='Herbivory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('leaves_leaflets', models.IntegerField()),
                ('total', models.IntegerField()),
                ('x_herbivory', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='HPLCResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tyrosine', models.IntegerField()),
                ('extraction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inga.Extraction')),
            ],
        ),
        migrations.CreateModel(
            name='LeafMassArea',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('age', models.TextField()),
                ('size', models.TextField()),
                ('light', models.TextField()),
                ('inches', models.FloatField()),
                ('area', models.FloatField()),
                ('dw_g', models.FloatField()),
                ('dw_area_g', models.FloatField()),
                ('drying_method', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gps', models.IntegerField()),
                ('trail', models.IntegerField()),
                ('measure', models.IntegerField()),
                ('offset', models.IntegerField()),
                ('side', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Method',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('method_number', models.IntegerField()),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='MethodResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metric', models.TextField()),
                ('measurement', models.FloatField()),
                ('method', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inga.Method')),
            ],
        ),
        migrations.CreateModel(
            name='Nitrogen',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('age', models.TextField()),
                ('weight_before_grounding', models.FloatField()),
                ('precentage_of_expansion', models.TextField()),
                ('weight_after_grounding', models.FloatField()),
                ('sample_number_for_nitrogen_analysis', models.TextField()),
                ('subsample_weight', models.FloatField()),
                ('percent_nitrogen', models.FloatField()),
                ('notes', models.TextField()),
                ('chemistry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inga.Chemistry')),
            ],
        ),
        migrations.CreateModel(
            name='Plant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plant_number', models.IntegerField()),
                ('collectors', models.TextField()),
                ('date', models.DateTimeField()),
                ('size', models.CharField(max_length=20)),
                ('height', models.CharField(max_length=20)),
                ('light', models.CharField(max_length=20)),
                ('dbh', models.TextField()),
                ('lh', models.TextField()),
                ('dna', models.TextField()),
                ('date_dna_sent', models.DateTimeField()),
                ('herbarium_sample', models.TextField()),
                ('flower_color', models.TextField()),
                ('description', models.TextField()),
                ('new_leaves', models.IntegerField()),
                ('code', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='PlantDNA',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dna', models.TextField()),
                ('plant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inga.Plant')),
            ],
        ),
        migrations.CreateModel(
            name='PlantPhoto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.FileField(upload_to='')),
                ('plant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inga.Plant')),
            ],
        ),
        migrations.CreateModel(
            name='PlantSpecies',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('old_species_number', models.TextField()),
                ('species_code', models.TextField()),
                ('genus', models.TextField()),
                ('species_name', models.TextField()),
                ('comment', models.TextField()),
                ('authority', models.TextField()),
                ('note_chemistry_analysis', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='RAW',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('raw_file_path', models.FileField(upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='RTIQC',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rti', models.TextField()),
                ('passing', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='RTIQCMember',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rt', models.IntegerField()),
                ('ppm', models.IntegerField()),
                ('sn', models.IntegerField()),
                ('pk_wd', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Site',
            fields=[
                ('site_id', models.IntegerField(primary_key=True, serialize=False)),
                ('country', models.TextField()),
                ('latitude_degrees', models.TextField()),
                ('latitude_minutes', models.IntegerField()),
                ('longitude_degrees', models.TextField()),
                ('longitude_minutes', models.IntegerField()),
                ('altitude', models.IntegerField()),
                ('temp', models.FloatField()),
                ('annual_rainfall', models.IntegerField()),
                ('rainfall_seasonality', models.TextField()),
                ('rainfall_seasonality_pdfs', models.TextField()),
                ('soils', models.TextField()),
                ('solid_pdfs', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Toughness',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='UPLCResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('diva', models.TextField()),
                ('date', models.DateField()),
                ('mode', models.TextField()),
                ('sample_type', models.TextField()),
                ('sample_id', models.TextField()),
                ('tune_page', models.TextField()),
                ('project_name', models.TextField()),
                ('ms_method', models.TextField()),
                ('uplc_method', models.TextField()),
                ('ms_mode', models.IntegerField()),
                ('is_text', models.TextField()),
                ('is_ppm', models.IntegerField()),
                ('is_rt', models.IntegerField()),
                ('rt_shift', models.IntegerField()),
                ('is_tic', models.IntegerField()),
                ('is_sn', models.IntegerField()),
                ('notes', models.TextField()),
                ('all_inga', models.TextField()),
                ('chemocoding', models.TextField()),
                ('converted', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inga.Converted')),
                ('extraction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inga.Extraction')),
                ('raw', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inga.RAW')),
                ('rti', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inga.RTIQC')),
            ],
        ),
        migrations.CreateModel(
            name='Voucher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.AddField(
            model_name='rtiqc',
            name='members',
            field=models.ManyToManyField(to='inga.RTIQCMember'),
        ),
        migrations.AddField(
            model_name='plant',
            name='site',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inga.Site'),
        ),
        migrations.AddField(
            model_name='plant',
            name='species',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inga.PlantSpecies'),
        ),
        migrations.AddField(
            model_name='plant',
            name='vouchers',
            field=models.ManyToManyField(to='inga.Voucher'),
        ),
        migrations.AddField(
            model_name='location',
            name='plant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inga.Plant'),
        ),
        migrations.AddField(
            model_name='herbivory',
            name='location',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inga.Location'),
        ),
        migrations.AddField(
            model_name='herbivory',
            name='species',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inga.PlantSpecies'),
        ),
        migrations.AddField(
            model_name='herbivorephotos',
            name='voucher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inga.HerbivoreVoucher'),
        ),
        migrations.AddField(
            model_name='herbivoredna',
            name='voucher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inga.HerbivoreVoucher'),
        ),
        migrations.AddField(
            model_name='herbivorecollectionobservation',
            name='voucher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inga.HerbivoreVoucher'),
        ),
        migrations.AddField(
            model_name='field',
            name='herbivore_collection_observation',
            field=models.ManyToManyField(to='inga.HerbivoreCollectionObservation'),
        ),
        migrations.AddField(
            model_name='field',
            name='herbivore_species_observation',
            field=models.ManyToManyField(to='inga.HerbivoreSpeciesObservation'),
        ),
        migrations.AddField(
            model_name='field',
            name='plant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inga.Plant'),
        ),
        migrations.AddField(
            model_name='chemistry',
            name='plant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inga.Plant'),
        ),
    ]
