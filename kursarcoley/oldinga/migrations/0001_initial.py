# -*- coding: utf-8 -*-
# Generated by Django 1.9.7 on 2016-07-11 16:33
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Chemistry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chem_field', models.CharField(blank=True, db_column='Chem#', max_length=25, null=True, unique=True)),
                ('site', models.CharField(blank=True, db_column='Site', max_length=12, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('month', models.CharField(blank=True, max_length=5, null=True)),
                ('day', models.IntegerField(blank=True, null=True)),
                ('species_field', models.CharField(blank=True, db_column='Species#', max_length=25, null=True)),
                ('species_name', models.CharField(blank=True, db_column='Species_name', max_length=50, null=True)),
                ('size', models.CharField(blank=True, max_length=8, null=True)),
                ('light', models.CharField(blank=True, max_length=8, null=True)),
                ('exp_min', models.CharField(blank=True, db_column='Exp_Min', max_length=50, null=True)),
                ('exp_max', models.CharField(blank=True, db_column='Exp_Max', max_length=50, null=True)),
                ('height', models.DecimalField(blank=True, db_column='Height', decimal_places=2, max_digits=4, null=True)),
                ('dbh', models.CharField(blank=True, db_column='DBH', max_length=25, null=True)),
                ('fwg', models.CharField(blank=True, db_column='FWg', max_length=25, null=True)),
                ('age', models.CharField(blank=True, db_column='Age', max_length=25, null=True)),
                ('use', models.CharField(blank=True, db_column='Use', max_length=12, null=True)),
                ('cur_w', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True)),
                ('vial_w', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True)),
                ('unnused_materialg', models.DecimalField(blank=True, db_column='Unnused_Materialg', decimal_places=5, max_digits=6, null=True)),
                ('box_field', models.CharField(blank=True, db_column='Box#', max_length=25, null=True)),
                ('field_of_plants', models.CharField(blank=True, db_column='#_of_plants', max_length=255, null=True)),
                ('notes10', models.CharField(blank=True, db_column='Notes10', max_length=45, null=True)),
                ('status', models.CharField(blank=True, db_column='Status', max_length=45, null=True)),
                ('extracted', models.TextField(db_column='Extracted')),
                ('notes12', models.CharField(blank=True, db_column='Notes12', max_length=45, null=True)),
                ('notes13', models.CharField(blank=True, db_column='Notes13', max_length=45, null=True)),
                ('oldspecies_field', models.CharField(blank=True, db_column='OldSpecies#', max_length=45, null=True)),
                ('updated', models.DateTimeField(db_column='Updated')),
            ],
            options={
                'db_table': 'chemistry',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Chlorophyll',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site', models.CharField(blank=True, max_length=12, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('month', models.CharField(blank=True, max_length=5, null=True)),
                ('day', models.CharField(blank=True, max_length=3, null=True)),
                ('plant_field', models.IntegerField(blank=True, db_column='Plant#', null=True)),
                ('field_exp', models.IntegerField(blank=True, db_column='%exp', null=True)),
                ('size', models.CharField(blank=True, max_length=12, null=True)),
                ('light', models.CharField(blank=True, max_length=5, null=True)),
                ('spadd', models.IntegerField(db_column='Spadd')),
                ('chl_mg_dm2', models.DecimalField(blank=True, db_column='Chl_mg/dm2', decimal_places=8, max_digits=12, null=True)),
                ('notes', models.CharField(blank=True, db_column='Notes', max_length=100, null=True)),
                ('updated', models.DateTimeField(db_column='Updated')),
            ],
            options={
                'db_table': 'chlorophyll',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Efn',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(blank=True, db_column='Year', null=True)),
                ('month', models.CharField(blank=True, db_column='Month', max_length=5, null=True)),
                ('site', models.CharField(db_column='Site', max_length=12)),
                ('basalmm', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('midmm', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('apicalmm', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('color', models.CharField(blank=True, db_column='Color', max_length=25, null=True)),
                ('shape', models.CharField(blank=True, db_column='Shape', max_length=45, null=True)),
                ('type', models.CharField(blank=True, db_column='Type', max_length=12, null=True)),
                ('xefnmm', models.DecimalField(blank=True, db_column='xEFNmm', decimal_places=2, max_digits=5, null=True)),
                ('notes1', models.CharField(blank=True, db_column='Notes1', max_length=100, null=True)),
                ('notes2', models.CharField(blank=True, db_column='Notes2', max_length=100, null=True)),
                ('updated', models.DateTimeField(db_column='Updated')),
            ],
            options={
                'db_table': 'efn',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Expansion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('collectors', models.CharField(blank=True, db_column='Collectors', max_length=25, null=True)),
                ('site', models.TextField(blank=True, db_column='Site', null=True)),
                ('year', models.IntegerField(blank=True, db_column='Year', null=True)),
                ('month', models.IntegerField(blank=True, db_column='Month', null=True)),
                ('plant_field', models.IntegerField(blank=True, db_column='Plant#', null=True)),
                ('lh_field', models.IntegerField(blank=True, db_column='LH#', null=True)),
                ('location', models.CharField(blank=True, db_column='Location', max_length=25, null=True)),
                ('day1', models.IntegerField(blank=True, db_column='Day1', null=True)),
                ('hour1', models.IntegerField(blank=True, db_column='Hour1', null=True)),
                ('area1', models.IntegerField(blank=True, db_column='Area1', null=True)),
                ('day2', models.IntegerField(blank=True, db_column='Day2', null=True)),
                ('hour2', models.IntegerField(blank=True, db_column='Hour2', null=True)),
                ('age2', models.IntegerField(blank=True, db_column='Age2', null=True)),
                ('area2', models.IntegerField(blank=True, db_column='Area2', null=True)),
                ('day3', models.IntegerField(blank=True, db_column='Day3', null=True)),
                ('hour3', models.IntegerField(blank=True, db_column='Hour3', null=True)),
                ('age3', models.IntegerField(blank=True, db_column='Age3', null=True)),
                ('area3', models.IntegerField(blank=True, db_column='Area3', null=True)),
                ('day4', models.IntegerField(blank=True, db_column='Day4', null=True)),
                ('hour4', models.IntegerField(blank=True, db_column='Hour4', null=True)),
                ('age4', models.IntegerField(blank=True, db_column='Age4', null=True)),
                ('area4', models.IntegerField(blank=True, db_column='Area4', null=True)),
                ('day5', models.IntegerField(blank=True, db_column='Day5', null=True)),
                ('hour5', models.IntegerField(blank=True, db_column='Hour5', null=True)),
                ('age5', models.IntegerField(blank=True, db_column='Age5', null=True)),
                ('area5', models.IntegerField(blank=True, db_column='Area5', null=True)),
                ('final', models.IntegerField(blank=True, db_column='Final', null=True)),
                ('age1percent', models.IntegerField(blank=True, db_column='Age1percent', null=True)),
                ('dt2', models.IntegerField(blank=True, null=True)),
                ('age2percent', models.IntegerField(blank=True, null=True)),
                ('dt3', models.IntegerField(blank=True, db_column='DT3', null=True)),
                ('age3percent', models.IntegerField(blank=True, db_column='Age3percent', null=True)),
                ('dt4', models.IntegerField(blank=True, db_column='DT4', null=True)),
                ('age4percent', models.IntegerField(blank=True, db_column='Age4percent', null=True)),
                ('dt5', models.IntegerField(blank=True, db_column='DT5', null=True)),
                ('age5percent', models.IntegerField(blank=True, db_column='Age5percent', null=True)),
                ('x_dt_d_field', models.IntegerField(blank=True, db_column='x-DT(d)', null=True)),
                ('x_exp_percent', models.IntegerField(blank=True, db_column='x-Exp-percent', null=True)),
                ('spp', models.IntegerField(blank=True, null=True)),
                ('notes2', models.IntegerField(blank=True, db_column='Notes2', null=True)),
                ('updated', models.DateTimeField(db_column='Updated')),
            ],
            options={
                'db_table': 'expansion',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Extraction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('species_field', models.CharField(blank=True, db_column='Species#', max_length=12, null=True)),
                ('extraction_number', models.IntegerField(blank=True, db_column='Extraction_Number', null=True, unique=True)),
                ('plant_field', models.IntegerField(blank=True, db_column='Plant#', null=True)),
                ('day', models.IntegerField(blank=True, null=True)),
                ('month', models.CharField(blank=True, max_length=5, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('extraction_method', models.FloatField(blank=True, db_column='Extraction_Method', null=True)),
                ('chemist', models.CharField(blank=True, db_column='Chemist', max_length=4, null=True)),
                ('notebook_number', models.IntegerField(blank=True, db_column='Notebook_Number', null=True)),
                ('extraction_notebook_number', models.IntegerField(blank=True, db_column='Extraction_Notebook_Number', null=True)),
                ('page_number', models.IntegerField(blank=True, db_column='Page_Number', null=True)),
                ('parent_extractionnum', models.CharField(blank=True, db_column='Parent ExtractionNum', max_length=45, null=True)),
                ('other_chem_used', models.CharField(blank=True, db_column='Other_Chem#_used', max_length=255, null=True)),
                ('box_number', models.CharField(blank=True, db_column='Box_Number', max_length=5, null=True)),
                ('comments', models.CharField(blank=True, db_column='Comments', max_length=4000, null=True)),
                ('file_names_to_be_linked', models.CharField(blank=True, db_column='File_Names_to_be_linked', max_length=45, null=True)),
                ('file_names_to_be_linked_2', models.CharField(blank=True, db_column='File_Names_to_be_linked_2', max_length=45, null=True)),
                ('file_location', models.CharField(blank=True, db_column='File_Location', max_length=45, null=True)),
                ('updated', models.DateTimeField(db_column='Updated')),
            ],
            options={
                'db_table': 'extraction',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ExtractionWeight',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('species_code', models.CharField(max_length=11)),
                ('pre_vacuum_dry_weight_g', models.CharField(blank=True, db_column='Pre-vacuum_dry_weight_g', max_length=12, null=True)),
                ('post_vacuum_dry_weight_g', models.DecimalField(blank=True, db_column='Post-vacuum_dry_weight_g', decimal_places=8, max_digits=12, null=True)),
                ('sample_dry_weight_g', models.DecimalField(blank=True, db_column='Sample_dry_weight_g', decimal_places=8, max_digits=12, null=True)),
                ('processed_fresh_weight_g', models.DecimalField(blank=True, db_column='Processed_fresh_weight_g', decimal_places=8, max_digits=12, null=True)),
                ('empty_vial_wt', models.DecimalField(blank=True, db_column='Empty_Vial_Wt', decimal_places=4, max_digits=6, null=True)),
                ('dry_marc_vial_wt', models.DecimalField(blank=True, db_column='Dry_Marc+Vial_wt', decimal_places=4, max_digits=6, null=True)),
                ('final_marc_weight_g', models.DecimalField(blank=True, db_column='Final_marc_weight_g', decimal_places=8, max_digits=12, null=True)),
                ('total_extract_mass_g', models.DecimalField(blank=True, db_column='Total_extract_mass_g', decimal_places=8, max_digits=12, null=True)),
                ('prop_sample_remainging', models.DecimalField(db_column='Prop_Sample_Remainging', decimal_places=4, max_digits=8)),
                ('percent_extracted', models.DecimalField(db_column='Percent_Extracted', decimal_places=4, max_digits=8)),
                ('date_dried', models.DateField(blank=True, db_column='Date_Dried', null=True)),
                ('date_stored', models.DateField(blank=True, db_column='Date_Stored', null=True)),
                ('filter_paper_weight_g', models.DecimalField(blank=True, db_column='Filter_Paper_Weight_g', decimal_places=8, max_digits=12, null=True)),
                ('number_70c_h2o_extract_fraction_g', models.DecimalField(blank=True, db_column='70C_H2O_extract_Fraction_g', decimal_places=8, max_digits=12, null=True)),
                ('organic_extractable_split_fraction_g', models.DecimalField(blank=True, db_column='Organic_Extractable_Split_Fraction_g', decimal_places=8, max_digits=12, null=True)),
                ('percent_of_volume_that_was_fractionated', models.CharField(blank=True, db_column='Percent_of_Volume_that_was_fractionated', max_length=5, null=True)),
                ('lipid_fraction_g', models.DecimalField(blank=True, db_column='Lipid_Fraction_g', decimal_places=8, max_digits=12, null=True)),
                ('post_defat_organic_extractable_split_fraction_g', models.DecimalField(blank=True, db_column='Post_Defat;_Organic_Extractable_Split_Fraction_g', decimal_places=8, max_digits=12, null=True)),
                ('percent_of_volume_that_was_fractionated_1', models.CharField(blank=True, db_column='Percent_of_Volume_that_was_fractionated_1', max_length=5, null=True)),
                ('dowex50h_org_acids_neut_frac_neutralized_w_naoh_g', models.DecimalField(blank=True, db_column='Dowex50H_Org_acids_neut_frac_Neutralized_w_NaOH_g', decimal_places=8, max_digits=12, null=True)),
                ('dowex50h_organic_acid_plus_neutral_fraction_g', models.DecimalField(blank=True, db_column='Dowex50H_organic_acid_plus_neutral_Fraction_g', decimal_places=8, max_digits=12, null=True)),
                ('dowex50h_npaa_fraction_g', models.DecimalField(blank=True, db_column='Dowex50H_NPAA_Fraction_g', decimal_places=8, max_digits=12, null=True)),
                ('phenolics_and_saponins_fraction_g', models.DecimalField(blank=True, db_column='Phenolics_and_Saponins_Fraction_g', decimal_places=8, max_digits=12, null=True)),
                ('hoh_insoluble_g', models.DecimalField(blank=True, db_column='HOH_Insoluble_g', decimal_places=8, max_digits=12, null=True)),
                ('ods_100_hoh_fraction_g', models.DecimalField(blank=True, db_column='ODS:_100%_HOH_Fraction_g', decimal_places=8, max_digits=12, null=True)),
                ('ods_100_hoh_fraction_blank_hoh_5_g', models.DecimalField(blank=True, db_column='ODS:_100%_HOH_Fraction_Blank_HOH-5_g', decimal_places=8, max_digits=12, null=True)),
                ('ods_25_meoh_fraction_g', models.DecimalField(blank=True, db_column='ODS_25%_MeOH_Fraction_g', decimal_places=8, max_digits=12, null=True)),
                ('ods_35_meoh_fraction_g', models.DecimalField(blank=True, db_column='ODS_35%_MeOH_Fraction_g', decimal_places=8, max_digits=12, null=True)),
                ('ods_60_meoh_fraction_g', models.DecimalField(blank=True, db_column='ODS:_60%_MeOH_Fraction_g', decimal_places=8, max_digits=12, null=True)),
                ('ods_60_meoh_fraction_blank_60_4_g', models.DecimalField(blank=True, db_column='ODS:_60%_MeOH_Fraction_Blank_60-4_g', decimal_places=8, max_digits=12, null=True)),
                ('ods_50_meoh_fraction_g', models.DecimalField(blank=True, db_column='ODS_50%_MeOH_Fraction_g', decimal_places=8, max_digits=12, null=True)),
                ('ods_100_meoh_fractiong', models.DecimalField(blank=True, db_column='ODS:_100%_MeOH_Fractiong', decimal_places=8, max_digits=12, null=True)),
                ('ods_100_meoh_fraction_blank_100_4_g', models.DecimalField(blank=True, db_column='ODS:_100%_MeOH_Fraction_Blank_100-4_g', decimal_places=8, max_digits=12, null=True)),
                ('ods_100_acetone_fraction_g', models.DecimalField(blank=True, db_column='ODS:_100%_Acetone_Fraction_g', decimal_places=8, max_digits=12, null=True)),
                ('marc_70_acetone_fraction_g', models.DecimalField(blank=True, db_column='Marc:_70%_Acetone_Fraction_g', decimal_places=8, max_digits=12, null=True)),
                ('marc_80_etoh_g', models.DecimalField(blank=True, db_column='Marc:_80%_EtOH_g', decimal_places=8, max_digits=12, null=True)),
                ('marc_70_acetonitrile_g', models.CharField(blank=True, db_column='Marc:_70%_Acetonitrile_g', max_length=255, null=True)),
                ('ods_2_5_acetonitrile_fraction_g', models.DecimalField(blank=True, db_column='ODS:_2.5%_Acetonitrile_Fraction_g', decimal_places=8, max_digits=12, null=True)),
                ('ods_5_acetonitrile_fraction_g', models.DecimalField(blank=True, db_column='ODS:_5%_Acetonitrile_Fraction_g', decimal_places=8, max_digits=12, null=True)),
                ('ods_7_5_acetonitrile_fraction_g', models.DecimalField(blank=True, db_column='ODS:_7.5%_Acetonitrile_Fraction_g', decimal_places=8, max_digits=12, null=True)),
                ('ods_10_acetonitrile_fraction_g', models.DecimalField(blank=True, db_column='ODS:_10%_Acetonitrile_Fraction_g', decimal_places=8, max_digits=12, null=True)),
                ('ods_15_acetonitrile_fraction_g', models.DecimalField(blank=True, db_column='ODS:_15%_Acetonitrile_Fraction_g', decimal_places=8, max_digits=12, null=True)),
                ('ods_20_acetonitrile_fraction_g', models.DecimalField(blank=True, db_column='ODS:_20%_Acetonitrile_Fraction_g', decimal_places=8, max_digits=12, null=True)),
                ('ods_50_acetonitrile_fraction_g', models.DecimalField(blank=True, db_column='ODS:_50%_Acetonitrile_Fraction_g', decimal_places=8, max_digits=12, null=True)),
                ('ods_50_acetonitrile_fraction_blank_50_4_g', models.DecimalField(blank=True, db_column='ODS:_50%_Acetonitrile_Fraction_Blank_50-4_g', decimal_places=8, max_digits=12, null=True)),
                ('ods_60_acetonitrile_fraction_g', models.DecimalField(blank=True, db_column='ODS_60%_Acetonitrile_Fraction_g', decimal_places=8, max_digits=12, null=True)),
                ('ods_100_acetonitrile_fraction_g', models.DecimalField(blank=True, db_column='ODS:_100%_Acetonitrile_Fraction_g', decimal_places=8, max_digits=12, null=True)),
                ('ods_100_acetonitrile_fraction_blank_100_4_g', models.DecimalField(blank=True, db_column='ODS:_100%_Acetonitrile_Fraction_Blank_100-4_g', decimal_places=8, max_digits=12, null=True)),
                ('flavonoid_i_fraction_g', models.DecimalField(blank=True, db_column='Flavonoid_I_Fraction_g', decimal_places=8, max_digits=12, null=True)),
                ('flavonoid_ii_fraction_g', models.DecimalField(blank=True, db_column='Flavonoid_II_Fraction_g', decimal_places=8, max_digits=12, null=True)),
                ('saponins_fraction_g', models.DecimalField(blank=True, db_column='Saponins_Fraction_g', decimal_places=8, max_digits=12, null=True)),
                ('protein_i_fraction_g', models.DecimalField(blank=True, db_column='Protein_I_Fraction_g', decimal_places=8, max_digits=12, null=True)),
                ('protein_ii_fraction_g', models.DecimalField(blank=True, db_column='Protein_II_Fraction_g', decimal_places=8, max_digits=12, null=True)),
                ('other_insolubles_g', models.DecimalField(blank=True, db_column='Other_insolubles_g', decimal_places=8, max_digits=12, null=True)),
                ('total_dry_weight_g', models.DecimalField(blank=True, decimal_places=8, max_digits=12, null=True)),
                ('tyrosine_content_dry_weight', models.DecimalField(blank=True, db_column='Tyrosine_Content:_%_Dry_Weight', decimal_places=8, max_digits=12, null=True)),
                ('percent_recovery', models.DecimalField(blank=True, db_column='Percent_recovery', decimal_places=8, max_digits=12, null=True)),
                ('updated', models.DateTimeField(db_column='Updated')),
            ],
            options={
                'db_table': 'extraction_weight',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Field',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('year', models.IntegerField(blank=True, db_column='Year', null=True)),
                ('month', models.CharField(blank=True, db_column='Month', max_length=4, null=True)),
                ('day', models.IntegerField(blank=True, null=True)),
                ('orig_id', models.IntegerField(db_column='Orig_ID')),
                ('evm', models.TextField(db_column='EvM')),
                ('exp_min', models.CharField(blank=True, db_column='Exp_Min', max_length=12, null=True)),
                ('exp_max', models.CharField(blank=True, db_column='Exp_Max', max_length=12, null=True)),
                ('field_efn', models.IntegerField(blank=True, db_column='#EFN', null=True)),
                ('field_ants', models.IntegerField(blank=True, db_column='#ants', null=True)),
                ('ants_efn', models.DecimalField(blank=True, db_column='ants_EFN', decimal_places=8, max_digits=12, null=True)),
                ('ant_collection_field', models.CharField(blank=True, db_column='ant_collection#', max_length=12, null=True)),
                ('total_herb', models.IntegerField(blank=True, db_column='Total#Herb', null=True)),
                ('a_herbivore_species_code', models.CharField(blank=True, db_column='a-herbivore_species_code', max_length=12, null=True)),
                ('a_herbivores', models.IntegerField(blank=True, db_column='a-#herbivores', null=True)),
                ('b_herbivore_species_code', models.CharField(blank=True, db_column='b-herbivore_species_code', max_length=25, null=True)),
                ('b_herbivores', models.IntegerField(blank=True, db_column='b-#herbivores', null=True)),
                ('c_herbivore_species_code', models.CharField(blank=True, db_column='c-herbivore_species_code', max_length=25, null=True)),
                ('c_herbivores', models.CharField(blank=True, db_column='c-#herbivores', max_length=25, null=True)),
                ('d_herbivore_collection_field', models.CharField(blank=True, db_column='d-herbivore_collection#', max_length=25, null=True)),
                ('d_herbivores', models.IntegerField(blank=True, db_column='d-#herbivores', null=True)),
                ('d_herbivores_total', models.IntegerField(blank=True, db_column='d-#herbivores_total', null=True)),
                ('d_family_field', models.CharField(blank=True, db_column='d-family?', max_length=45, null=True)),
                ('e_herbivore_collection_field', models.CharField(blank=True, db_column='e-herbivore_collection#', max_length=25, null=True)),
                ('e_herbivores', models.CharField(blank=True, db_column='e-#herbivores', max_length=12, null=True)),
                ('e_herbivores_total', models.IntegerField(blank=True, db_column='e-#herbivores_total', null=True)),
                ('e_family_field', models.CharField(blank=True, db_column='e-family?', max_length=25, null=True)),
                ('f_herbivore_collection_field', models.CharField(blank=True, db_column='f-herbivore_collection#', max_length=25, null=True)),
                ('f_herbivores', models.CharField(blank=True, db_column='f-#herbivores', max_length=12, null=True)),
                ('f_herbivores_total', models.IntegerField(blank=True, db_column='f-#herbivores_total', null=True)),
                ('f_family_field', models.CharField(blank=True, db_column='f-family?', max_length=25, null=True)),
                ('g_herbivore_collection_field', models.CharField(blank=True, db_column='g-herbivore_collection#', max_length=25, null=True)),
                ('g_herbivores', models.CharField(blank=True, db_column='g-#herbivores', max_length=25, null=True)),
                ('g_herbivores_total', models.IntegerField(blank=True, db_column='g-#herbivores_total', null=True)),
                ('g_family_field', models.CharField(blank=True, db_column='g-family?', max_length=12, null=True)),
                ('h_herbivore_collection_field', models.CharField(blank=True, db_column='h-herbivore_collection#', max_length=25, null=True)),
                ('h_herbivores', models.IntegerField(blank=True, db_column='h-#herbivores', null=True)),
                ('h_herbivores_total', models.IntegerField(blank=True, db_column='h-#herbivores_total', null=True)),
                ('h_family_field', models.CharField(blank=True, db_column='h-family?', max_length=12, null=True)),
                ('i_herbivore_collection_field', models.CharField(blank=True, db_column='i-herbivore_collection#', max_length=25, null=True)),
                ('i_herbivores', models.IntegerField(blank=True, db_column='i-#herbivores', null=True)),
                ('i_herbivores_total', models.CharField(blank=True, db_column='i-#herbivores_total', max_length=12, null=True)),
                ('i_family_field', models.CharField(blank=True, db_column='i-family?', max_length=12, null=True)),
                ('j_herbivore_collection_field', models.CharField(blank=True, db_column='j-herbivore_collection#', max_length=25, null=True)),
                ('j_herbivores', models.IntegerField(blank=True, db_column='j-#herbivores', null=True)),
                ('j_herbivores_total_observe', models.IntegerField(blank=True, db_column='j-#herbivores_total_observe', null=True)),
                ('j_family_field', models.CharField(blank=True, db_column='j-family?', max_length=12, null=True)),
                ('k_herbivore_collection_field', models.CharField(blank=True, db_column='k-herbivore_collection#', max_length=25, null=True)),
                ('k_herbivores', models.IntegerField(blank=True, db_column='k-#herbivores', null=True)),
                ('k_herbivores_total_observe', models.IntegerField(blank=True, db_column='k-#herbivores_total_observe', null=True)),
                ('k_family_field', models.CharField(blank=True, db_column='k-family?', max_length=12, null=True)),
                ('l_herbivore_collection_field', models.CharField(blank=True, db_column='l-herbivore_collection#', max_length=25, null=True)),
                ('l_herbivores', models.IntegerField(blank=True, db_column='l-#herbivores', null=True)),
                ('l_herbivores_total_observe', models.IntegerField(blank=True, db_column='l-#herbivores_total_observe', null=True)),
                ('l_family_field', models.CharField(blank=True, db_column='l-family?', max_length=12, null=True)),
                ('m_herbivore_collection_field', models.CharField(blank=True, db_column='m-herbivore_collection#', max_length=25, null=True)),
                ('m_herbivores', models.IntegerField(blank=True, db_column='m-#herbivores', null=True)),
                ('m_herbivores_total_observe', models.IntegerField(blank=True, db_column='m-#herbivores_total_observe', null=True)),
                ('m_family_field', models.CharField(blank=True, db_column='m-family?', max_length=12, null=True)),
                ('n_herbivore_collection_field', models.CharField(blank=True, db_column='n-herbivore_collection#', max_length=25, null=True)),
                ('n_herbivores', models.IntegerField(blank=True, db_column='n-#herbivores', null=True)),
                ('n_herbivores_total_observe', models.IntegerField(blank=True, db_column='n-#herbivores_total_observe', null=True)),
                ('n_family_field', models.CharField(blank=True, db_column='n-family?', max_length=12, null=True)),
                ('o_herbivore_collection_field', models.CharField(blank=True, db_column='o-herbivore_collection#', max_length=25, null=True)),
                ('o_herbivores', models.IntegerField(blank=True, db_column='o-#herbivores', null=True)),
                ('o_herbivores_total_observe', models.IntegerField(blank=True, db_column='o-#herbivores_total_observe', null=True)),
                ('o_family_field', models.CharField(blank=True, db_column='o-family?', max_length=12, null=True)),
                ('p_herbivore_collection_field', models.CharField(blank=True, db_column='p-herbivore_collection#', max_length=25, null=True)),
                ('p_herbivores', models.IntegerField(blank=True, db_column='p-#herbivores', null=True)),
                ('p_herbivores_total_observe', models.IntegerField(blank=True, db_column='p-#herbivores_total_observe', null=True)),
                ('p_family_field', models.CharField(blank=True, db_column='p-family?', max_length=12, null=True)),
                ('q_herbivore_collection_field', models.CharField(blank=True, db_column='q-herbivore_collection#', max_length=25, null=True)),
                ('q_herbivores', models.IntegerField(blank=True, db_column='q-#herbivores', null=True)),
                ('q_herbivores_total_observe', models.IntegerField(blank=True, db_column='q-#herbivores_total_observe', null=True)),
                ('q_family_field', models.CharField(blank=True, db_column='q-family?', max_length=12, null=True)),
                ('r_herbivore_collection_field', models.CharField(blank=True, db_column='r-herbivore_collection#', max_length=25, null=True)),
                ('r_herbivores', models.IntegerField(blank=True, db_column='r-#herbivores', null=True)),
                ('r_herbivores_total_observe', models.IntegerField(blank=True, db_column='r-#herbivores_total_observe', null=True)),
                ('r_family_field', models.CharField(blank=True, db_column='r-family?', max_length=12, null=True)),
                ('s_herbivore_collection_field', models.CharField(blank=True, db_column='s-herbivore_collection#', max_length=25, null=True)),
                ('s_herbivores', models.IntegerField(blank=True, db_column='s-#herbivores', null=True)),
                ('s_herbivores_total_observe', models.IntegerField(blank=True, db_column='s-#herbivores_total_observe', null=True)),
                ('s_family_field', models.CharField(blank=True, db_column='s-family?', max_length=12, null=True)),
                ('t_herbivore_collection_field', models.CharField(blank=True, db_column='t-herbivore_collection#', max_length=25, null=True)),
                ('t_herbivores', models.IntegerField(blank=True, db_column='t-#herbivores', null=True)),
                ('t_herbivores_total_observe', models.IntegerField(blank=True, db_column='t-#herbivores_total_observe', null=True)),
                ('t_family_field', models.CharField(blank=True, db_column='t-family?', max_length=12, null=True)),
                ('u_herbivore_collection_field', models.CharField(blank=True, db_column='u-herbivore_collection#', max_length=25, null=True)),
                ('u_herbivores', models.IntegerField(blank=True, db_column='u-#herbivores', null=True)),
                ('u_herbivores_total_observe', models.IntegerField(blank=True, db_column='u-#herbivores_total_observe', null=True)),
                ('u_family_field', models.CharField(blank=True, db_column='u-family?', max_length=12, null=True)),
                ('v_herbivore_collection_field', models.CharField(blank=True, db_column='v-herbivore_collection#', max_length=25, null=True)),
                ('v_herbivores', models.IntegerField(blank=True, db_column='v-#herbivores', null=True)),
                ('v_herbivores_total_observe', models.IntegerField(blank=True, db_column='v-#herbivores_total_observe', null=True)),
                ('v_family_field', models.CharField(blank=True, db_column='v-family?', max_length=12, null=True)),
                ('w_herbivore_collection_field', models.CharField(blank=True, db_column='w-herbivore_collection#', max_length=25, null=True)),
                ('w_herbivores', models.IntegerField(blank=True, db_column='w-#herbivores', null=True)),
                ('w_herbivores_total_observe', models.IntegerField(blank=True, db_column='w-#herbivores_total_observe', null=True)),
                ('w_family_field', models.CharField(blank=True, db_column='w-family?', max_length=12, null=True)),
                ('x_herbivore_collection_field', models.CharField(blank=True, db_column='x-herbivore_collection#', max_length=25, null=True)),
                ('x_herbivores', models.IntegerField(blank=True, db_column='x-#herbivores', null=True)),
                ('x_herbivores_total_observe', models.IntegerField(blank=True, db_column='x-#herbivores_total_observe', null=True)),
                ('x_family_field', models.CharField(blank=True, db_column='x-family?', max_length=12, null=True)),
                ('y_herbivore_collection_field', models.CharField(blank=True, db_column='y-herbivore_collection#', max_length=25, null=True)),
                ('y_herbivores', models.IntegerField(blank=True, db_column='y-#herbivores', null=True)),
                ('y_herbivores_total_observe', models.IntegerField(blank=True, db_column='y-#herbivores_total_observe', null=True)),
                ('y_family_field', models.CharField(blank=True, db_column='y-family?', max_length=12, null=True)),
                ('z_herbivore_collection_field', models.CharField(blank=True, db_column='z-herbivore_collection#', max_length=25, null=True)),
                ('z_herbivores', models.IntegerField(blank=True, db_column='z-#herbivores', null=True)),
                ('z_herbivores_total_observe', models.IntegerField(blank=True, db_column='z-#herbivores_total_observe', null=True)),
                ('z_family_field', models.CharField(blank=True, db_column='z-family?', max_length=12, null=True)),
                ('aa_herbivore_collection_field', models.CharField(blank=True, db_column='aa-herbivore_collection#', max_length=25, null=True)),
                ('aa_herbivores', models.IntegerField(blank=True, db_column='aa-#herbivores', null=True)),
                ('aa_herbivores_total_observe', models.IntegerField(blank=True, db_column='aa-#herbivores_total_observe', null=True)),
                ('aa_family_field', models.CharField(blank=True, db_column='aa-family?', max_length=12, null=True)),
                ('ab_herbivore_collection_field', models.CharField(blank=True, db_column='ab-herbivore_collection#', max_length=25, null=True)),
                ('ab_herbivores', models.IntegerField(blank=True, db_column='ab-#herbivores', null=True)),
                ('ab_herbivores_total_observe', models.IntegerField(blank=True, db_column='ab-#herbivores_total_observe', null=True)),
                ('ab_family_field', models.CharField(blank=True, db_column='ab-family?', max_length=12, null=True)),
                ('ac_herbivore_collection_field', models.CharField(blank=True, db_column='ac-herbivore_collection#', max_length=25, null=True)),
                ('ac_herbivores', models.IntegerField(blank=True, db_column='ac-#herbivores', null=True)),
                ('ac_herbivores_total_observe', models.IntegerField(blank=True, db_column='ac-#herbivores_total_observe', null=True)),
                ('ac_family_field', models.CharField(blank=True, db_column='ac-family?', max_length=12, null=True)),
                ('ad_herbivore_collection_field', models.CharField(blank=True, db_column='ad-herbivore_collection#', max_length=25, null=True)),
                ('ad_herbivores', models.IntegerField(blank=True, db_column='ad-#herbivores', null=True)),
                ('ad_herbivores_total_observe', models.IntegerField(blank=True, db_column='ad-#herbivores_total_observe', null=True)),
                ('ad_family_field', models.CharField(blank=True, db_column='ad-family?', max_length=12, null=True)),
                ('ae_herbivore_collection_field', models.CharField(blank=True, db_column='ae-herbivore_collection#', max_length=25, null=True)),
                ('ae_herbivores', models.IntegerField(blank=True, db_column='ae-#herbivores', null=True)),
                ('ae_herbivores_total_observe', models.IntegerField(blank=True, db_column='ae-#herbivores_total_observe', null=True)),
                ('ae_family_field', models.CharField(blank=True, db_column='ae-family?', max_length=12, null=True)),
                ('af_herbivor_collection_field', models.CharField(blank=True, db_column='AF-Herbivor_Collection#', max_length=25, null=True)),
                ('af_herbivores_total_observe', models.IntegerField(blank=True, db_column='af-#herbivores_total_observe', null=True)),
                ('af_family_field', models.CharField(blank=True, db_column='af-family?', max_length=45, null=True)),
                ('af_herbivores', models.IntegerField(blank=True, db_column='af-#herbivores', null=True)),
                ('ag_herbivore_collection_field', models.CharField(blank=True, db_column='ag-herbivore_collection#', max_length=25, null=True)),
                ('ag_herbivores', models.IntegerField(blank=True, db_column='ag-#herbivores', null=True)),
                ('ag_herbivores_total_observe', models.IntegerField(blank=True, db_column='ag-#herbivores_total_observe', null=True)),
                ('ag_family_field', models.CharField(blank=True, db_column='ag-family?', max_length=45, null=True)),
                ('ah_herbivore_collection_field', models.CharField(blank=True, db_column='ah-herbivore_collection#', max_length=25, null=True)),
                ('ah_herbivores', models.IntegerField(blank=True, db_column='ah-#herbivores', null=True)),
                ('ah_herbivores_total_observe', models.IntegerField(blank=True, db_column='ah-#herbivores_total_observe', null=True)),
                ('ah_family_field', models.CharField(blank=True, db_column='ah-family?', max_length=45, null=True)),
                ('notes1', models.CharField(db_column='Notes1', max_length=255)),
                ('notes2', models.CharField(db_column='Notes2', max_length=255)),
                ('notes3', models.CharField(db_column='Notes3', max_length=255)),
                ('notes4', models.CharField(db_column='Notes4', max_length=255)),
                ('notes5', models.CharField(db_column='Notes5', max_length=255)),
                ('notes6', models.CharField(db_column='Notes6', max_length=255)),
                ('notes7', models.CharField(db_column='Notes7', max_length=255)),
                ('notes8', models.CharField(db_column='Notes8', max_length=255)),
                ('updated', models.DateTimeField(db_column='Updated')),
            ],
            options={
                'db_table': 'field',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Hairs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site', models.CharField(blank=True, max_length=12, null=True)),
                ('year', models.CharField(blank=True, max_length=5, null=True)),
                ('month', models.CharField(blank=True, max_length=5, null=True)),
                ('plant_field', models.IntegerField(blank=True, db_column='Plant#', null=True)),
                ('species_code', models.CharField(blank=True, db_column='Species_code', max_length=11, null=True)),
                ('density_top_1_field', models.IntegerField(blank=True, db_column='Density__Top_1_', null=True)),
                ('density_top_2_field', models.IntegerField(blank=True, db_column='Density__Top_2_', null=True)),
                ('density_top_3_field', models.IntegerField(blank=True, db_column='Density__Top_3_', null=True)),
                ('density_top_average_01in2', models.DecimalField(blank=True, db_column='Density_top_average__#.01in2', decimal_places=6, max_digits=8, null=True)),
                ('field_primary_vein_top_0_1in', models.IntegerField(blank=True, db_column='#/primary_vein_top_#/0.1in', null=True)),
                ('hairtype1', models.CharField(blank=True, db_column='HairType1', max_length=5, null=True)),
                ('field_2o_vein_top_0_1in', models.IntegerField(blank=True, db_column='#/2o_vein_top_#/0.1in', null=True)),
                ('density_bottom_1_field', models.IntegerField(blank=True, db_column='Density_Bottom_1_', null=True)),
                ('density_bottom_2_field', models.IntegerField(blank=True, db_column='Density_Bottom_2_', null=True)),
                ('density_bottom_3_field', models.IntegerField(blank=True, db_column='Density_Bottom_3_', null=True)),
                ('density_bottom_average_01in2', models.DecimalField(blank=True, db_column='Density_bottom_average__#.01in2', decimal_places=6, max_digits=8, null=True)),
                ('field_1o_vein_bottom_0_01in', models.IntegerField(blank=True, db_column='#/1o__vein_bottom_#/0.01in', null=True)),
                ('haritype2', models.CharField(blank=True, db_column='HariType2', max_length=5, null=True)),
                ('length_1o_bottom_mm', models.DecimalField(blank=True, db_column='Length_1o_Bottom_mm', decimal_places=6, max_digits=8, null=True)),
                ('field_2o_vein_bottom_0_1in', models.DecimalField(blank=True, db_column='#/2o__vein_bottom_#/0.1in', decimal_places=6, max_digits=8, null=True)),
                ('small_hairs_on_top_blade', models.IntegerField(blank=True, null=True)),
                ('small_hairs_on_top_vein', models.IntegerField(blank=True, null=True)),
                ('small_hairs_on_bottom_blade', models.IntegerField(blank=True, null=True)),
                ('small_hairs_on_bottom_vein', models.IntegerField(blank=True, null=True)),
                ('notes1', models.CharField(blank=True, db_column='Notes1', max_length=255, null=True)),
                ('notes_2', models.CharField(blank=True, db_column='Notes_2', max_length=5, null=True)),
                ('updated', models.DateTimeField(db_column='Updated')),
            ],
            options={
                'db_table': 'hairs',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Herbivory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site', models.CharField(blank=True, db_column='Site', max_length=12, null=True)),
                ('year', models.IntegerField(blank=True, db_column='Year', null=True)),
                ('month', models.CharField(blank=True, db_column='Month', max_length=4, null=True)),
                ('location', models.CharField(blank=True, db_column='Location', max_length=55, null=True)),
                ('leaves_leaflests', models.IntegerField(blank=True, null=True)),
                ('total', models.IntegerField(blank=True, null=True)),
                ('x_herbivory', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True)),
                ('plant_field', models.IntegerField(blank=True, db_column='Plant#', null=True)),
                ('updated', models.DateTimeField(db_column='Updated')),
            ],
            options={
                'db_table': 'herbivory',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Lma',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site', models.CharField(blank=True, max_length=12, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('month', models.CharField(blank=True, max_length=4, null=True)),
                ('day', models.IntegerField(blank=True, null=True)),
                ('plant_field', models.IntegerField(blank=True, db_column='plant#', null=True)),
                ('species_code', models.CharField(max_length=11)),
                ('age', models.CharField(blank=True, max_length=10, null=True)),
                ('size', models.CharField(blank=True, max_length=20, null=True)),
                ('light', models.CharField(blank=True, max_length=20, null=True)),
                ('inches', models.DecimalField(blank=True, decimal_places=5, max_digits=10, null=True)),
                ('area_cm2', models.DecimalField(blank=True, decimal_places=6, max_digits=20, null=True)),
                ('dw_g', models.DecimalField(blank=True, decimal_places=5, max_digits=12, null=True)),
                ('dw_area_g_cm2', models.DecimalField(blank=True, decimal_places=8, max_digits=38, null=True)),
                ('drying_method', models.CharField(blank=True, max_length=50, null=True)),
                ('updated', models.DateTimeField(db_column='Updated')),
            ],
            options={
                'db_table': 'lma',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plant_field', models.IntegerField(blank=True, db_column='Plant#', null=True)),
                ('species_code', models.CharField(blank=True, db_column='Species_code', max_length=25, null=True)),
                ('gps', models.IntegerField(db_column='GPS')),
                ('trail', models.IntegerField(db_column='Trail')),
                ('measure', models.IntegerField(db_column='Measure')),
                ('offset', models.IntegerField(db_column='Offset')),
                ('side', models.IntegerField(db_column='Side')),
            ],
            options={
                'db_table': 'location',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Motu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('motu', models.CharField(db_column='MOTU', max_length=25)),
                ('analysis', models.CharField(db_column='Analysis', max_length=50)),
                ('voucher', models.CharField(blank=True, db_column='Voucher', max_length=25, null=True, unique=True)),
                ('sequence', models.CharField(blank=True, db_column='Sequence', max_length=30, null=True)),
                ('la_motu', models.CharField(db_column='LA_MOTU', max_length=30)),
                ('blasting_family', models.TextField(db_column='Blasting_Family')),
                ('blasting_subfamily', models.TextField(db_column='Blasting_Subfamily')),
                ('blasting_genus', models.TextField(db_column='Blasting_Genus')),
                ('percentage', models.IntegerField(db_column='Percentage')),
                ('bin', models.CharField(db_column='BIN', max_length=250)),
                ('notes_on_host', models.CharField(db_column='Notes_on_host', max_length=300)),
                ('notes', models.CharField(db_column='Notes', max_length=300)),
                ('updated', models.DateTimeField(db_column='Updated')),
            ],
            options={
                'db_table': 'motu',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Nitrogen',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site', models.CharField(db_column='Site', max_length=12)),
                ('species_code', models.CharField(max_length=11)),
                ('species_field', models.CharField(blank=True, db_column='species#', max_length=10, null=True)),
                ('species_name', models.CharField(blank=True, max_length=50, null=True)),
                ('plant_field', models.IntegerField(blank=True, db_column='plant#', null=True)),
                ('chemistry_field', models.CharField(blank=True, db_column='chemistry#', max_length=25, null=True)),
                ('age', models.CharField(blank=True, max_length=10, null=True)),
                ('weight_before_grounding_g', models.DecimalField(blank=True, decimal_places=6, max_digits=12, null=True)),
                ('percentage_of_expansion', models.CharField(blank=True, max_length=10, null=True)),
                ('habitat', models.CharField(blank=True, max_length=10, null=True)),
                ('weight_after_grounding_g', models.DecimalField(blank=True, decimal_places=6, max_digits=12, null=True)),
                ('sample_number_for_n2_analysis', models.CharField(blank=True, max_length=16, null=True)),
                ('subsample_weight_g', models.DecimalField(blank=True, decimal_places=6, max_digits=12, null=True)),
                ('percent_n', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('notes', models.CharField(blank=True, max_length=255, null=True)),
                ('updated', models.DateTimeField(db_column='Updated')),
            ],
            options={
                'db_table': 'nitrogen',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PlantTable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('collectors', models.CharField(blank=True, db_column='Collectors', max_length=100, null=True)),
                ('date', models.DateField(blank=True, db_column='Date', null=True)),
                ('year', models.IntegerField(db_column='Year')),
                ('month', models.CharField(db_column='Month', max_length=4)),
                ('day', models.IntegerField(db_column='Day')),
                ('plant_field', models.IntegerField(db_column='Plant#')),
                ('location', models.CharField(blank=True, db_column='Location', max_length=45, null=True)),
                ('size', models.CharField(blank=True, max_length=6, null=True)),
                ('light', models.CharField(blank=True, max_length=8, null=True)),
                ('height', models.CharField(blank=True, max_length=25, null=True)),
                ('dbh', models.CharField(blank=True, db_column='DBH', max_length=25, null=True)),
                ('lh', models.CharField(blank=True, db_column='LH', max_length=15, null=True)),
                ('dna', models.CharField(blank=True, db_column='DNA', max_length=15, null=True)),
                ('date_dna_sent', models.CharField(blank=True, db_column='Date_DNA_SENT', max_length=11, null=True)),
                ('notes_plant', models.CharField(blank=True, db_column='Notes_Plant', max_length=255, null=True)),
                ('photo_live', models.CharField(blank=True, max_length=25, null=True)),
                ('photo_dry', models.CharField(blank=True, max_length=25, null=True)),
                ('voucher1', models.CharField(blank=True, max_length=5, null=True)),
                ('voucher2', models.CharField(blank=True, max_length=5, null=True)),
                ('voucher3', models.CharField(blank=True, max_length=10, null=True)),
                ('voucher4', models.CharField(blank=True, max_length=10, null=True)),
                ('herbarium_sample', models.CharField(blank=True, max_length=25, null=True)),
                ('flower_color', models.CharField(blank=True, max_length=25, null=True)),
                ('description', models.CharField(blank=True, max_length=25, null=True)),
                ('new_leaves', models.IntegerField(blank=True, db_column='New_Leaves', null=True)),
                ('code', models.IntegerField(blank=True, null=True)),
                ('updated', models.DateTimeField(db_column='Updated')),
            ],
            options={
                'db_table': 'plant_table',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RtiQc',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rti', models.CharField(db_column='RTI', max_length=11)),
                ('rt_1', models.IntegerField(db_column='RT_1')),
                ('ppm_1', models.IntegerField(db_column='PPM_1')),
                ('sn_1', models.IntegerField(db_column='SN_1')),
                ('pk_wd_1', models.IntegerField(db_column='PK_wd_1')),
                ('rt_2', models.IntegerField(db_column='RT_2')),
                ('ppm_2', models.IntegerField(db_column='PPM_2')),
                ('sn_2', models.IntegerField(db_column='SN_2')),
                ('pk_wd_2', models.IntegerField(db_column='PK_wd_2')),
                ('rt_3', models.IntegerField(db_column='RT_3')),
                ('pk_wd_3', models.IntegerField(db_column='PK_Wd_3')),
                ('rt_4', models.IntegerField(db_column='RT_4')),
                ('ppm_4', models.IntegerField(db_column='PPM_4')),
                ('sn_4', models.IntegerField(db_column='SN_4')),
                ('pk_wd_4', models.IntegerField(db_column='PK_wd_4')),
                ('rt_5', models.IntegerField(db_column='RT_5')),
                ('ppm_5', models.IntegerField(db_column='PPM_5')),
                ('sn_5', models.IntegerField(db_column='SN_5')),
                ('pk_wd_5', models.IntegerField(db_column='PK_wd_5')),
                ('rt_6', models.IntegerField(db_column='RT_6')),
                ('ppm_6', models.IntegerField(db_column='PPM_6')),
                ('sn_6', models.IntegerField(db_column='SN_6')),
                ('pk_wd_6', models.IntegerField(db_column='PK_WD_6')),
                ('rt_7', models.IntegerField(db_column='RT_7')),
                ('ppm_7', models.IntegerField(db_column='PPM_7')),
                ('sn_7', models.IntegerField(db_column='SN_7')),
                ('pk_wd_7', models.IntegerField(db_column='PK_WD_7')),
                ('rt_8', models.IntegerField(db_column='RT_8')),
                ('ppm_8', models.IntegerField(db_column='PPM_8')),
                ('sn_8', models.IntegerField(db_column='SN_8')),
                ('pk_wd_8', models.IntegerField(db_column='Pk_Wd_8')),
                ('pass_y_n_field', models.TextField(db_column='Pass(Y/N)')),
                ('notes', models.CharField(db_column='Notes', max_length=255)),
                ('updated', models.DateTimeField(db_column='Updated')),
            ],
            options={
                'db_table': 'rti_qc',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Site',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site', models.CharField(blank=True, db_column='Site', max_length=12, null=True)),
                ('country', models.CharField(blank=True, db_column='Country', max_length=25, null=True)),
                ('latitude_degrees', models.CharField(blank=True, db_column='Latitude_Degrees', max_length=5, null=True)),
                ('latitude_minutes', models.IntegerField(blank=True, db_column='Latitude_Minutes', null=True)),
                ('longitude_degrees', models.CharField(blank=True, db_column='Longitude_Degrees', max_length=5, null=True)),
                ('longitude_minutes', models.IntegerField(blank=True, db_column='Longitude_Minutes', null=True)),
                ('altitude', models.IntegerField(blank=True, db_column='Altitude', null=True)),
                ('temp', models.DecimalField(blank=True, db_column='Temp', decimal_places=2, max_digits=4, null=True)),
                ('annual_rainfall', models.IntegerField(blank=True, db_column='Annual_Rainfall', null=True)),
                ('rainfall_seasonality', models.CharField(blank=True, db_column='Rainfall_Seasonality', max_length=12, null=True)),
                ('rainfall_seasonality_pdfs', models.CharField(blank=True, db_column='Rainfall_Seasonality_PDFS', max_length=255, null=True)),
                ('soils', models.CharField(blank=True, db_column='Soils', max_length=12, null=True)),
                ('soils_pdfs', models.CharField(blank=True, db_column='Soils_PDFS', max_length=255, null=True)),
                ('updated', models.DateTimeField(db_column='Updated')),
            ],
            options={
                'db_table': 'site',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Species',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('old_species_number', models.CharField(blank=True, db_column='Old_Species_Number', max_length=7, null=True)),
                ('species_code', models.CharField(max_length=11)),
                ('genus', models.CharField(blank=True, db_column='Genus', max_length=12, null=True)),
                ('species_name', models.CharField(blank=True, db_column='Species_name', max_length=25, null=True)),
                ('comment', models.CharField(blank=True, max_length=45, null=True)),
                ('authority', models.CharField(blank=True, max_length=25, null=True)),
                ('note_chem_anal', models.TextField(blank=True, db_column='Note_Chem_Anal', null=True)),
                ('updated', models.DateTimeField(db_column='Updated')),
            ],
            options={
                'db_table': 'species',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Toughness',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site', models.CharField(blank=True, db_column='Site', max_length=12, null=True)),
                ('year', models.IntegerField(blank=True, db_column='Year', null=True)),
                ('plant_field', models.IntegerField(blank=True, db_column='Plant#', null=True)),
                ('toughness1', models.IntegerField(blank=True, db_column='Toughness1', null=True)),
                ('toughness2', models.IntegerField(blank=True, db_column='Toughness2', null=True)),
                ('toughness3', models.IntegerField(blank=True, db_column='Toughness3', null=True)),
                ('toughness4', models.IntegerField(blank=True, db_column='Toughness4', null=True)),
                ('toughness5', models.IntegerField(blank=True, db_column='Toughness5', null=True)),
                ('toughness6', models.IntegerField(blank=True, db_column='Toughness6', null=True)),
                ('toughness7', models.IntegerField(blank=True, db_column='Toughness7', null=True)),
                ('toughness', models.DecimalField(blank=True, db_column='Toughness', decimal_places=4, max_digits=10, null=True)),
                ('notes', models.TextField(blank=True, db_column='Notes', null=True)),
                ('max_toughness', models.IntegerField(blank=True, db_column='Max_Toughness', null=True)),
                ('updated', models.DateTimeField(db_column='Updated')),
            ],
            options={
                'db_table': 'toughness',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UplcResults',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('diva_field', models.CharField(db_column='Diva#', max_length=11)),
                ('file_name', models.CharField(db_column='File_Name', max_length=15)),
                ('year', models.IntegerField(blank=True, db_column='Year', null=True)),
                ('month', models.IntegerField(blank=True, db_column='Month', null=True)),
                ('day', models.IntegerField(blank=True, db_column='Day', null=True)),
                ('mode', models.TextField(blank=True, db_column='Mode', null=True)),
                ('sample_type', models.TextField(db_column='Sample_Type')),
                ('sample_id', models.CharField(blank=True, db_column='Sample_ID', max_length=25, null=True)),
                ('plant_field', models.IntegerField(blank=True, db_column='Plant#', null=True)),
                ('species_code', models.CharField(max_length=11)),
                ('tune_page', models.CharField(db_column='Tune_Page', max_length=25)),
                ('project_name', models.CharField(db_column='Project_Name', max_length=22)),
                ('ms_method', models.CharField(db_column='MS_Method', max_length=30)),
                ('uplc_method', models.CharField(db_column='UPLC_Method', max_length=30)),
                ('ms_mode', models.IntegerField(blank=True, db_column='MS_Mode', null=True)),
                ('asoc_rti', models.CharField(blank=True, db_column='Asoc_RTI', max_length=11, null=True)),
                ('rti_pass', models.TextField(blank=True, db_column='RTI_PASS', null=True)),
                ('is_test', models.TextField(blank=True, db_column='IS_Test', null=True)),
                ('is_ppm', models.IntegerField(blank=True, db_column='IS_PPM', null=True)),
                ('is_rt', models.IntegerField(blank=True, db_column='IS_RT', null=True)),
                ('rt_shift', models.IntegerField(blank=True, db_column='RT_Shift', null=True)),
                ('is_tic', models.IntegerField(blank=True, db_column='IS_TIC', null=True)),
                ('is_sn', models.IntegerField(blank=True, db_column='IS_SN', null=True)),
                ('notes', models.CharField(blank=True, db_column='Notes', max_length=155, null=True)),
                ('all_inga', models.CharField(blank=True, db_column='All_Inga', max_length=5, null=True)),
                ('chemocoding', models.CharField(blank=True, db_column='Chemocoding', max_length=5, null=True)),
                ('file_path', models.IntegerField(blank=True, db_column='File_Path', null=True)),
                ('updated', models.DateTimeField(db_column='Updated')),
            ],
            options={
                'db_table': 'uplc_results',
                'managed': False,
            },
        ),
    ]
