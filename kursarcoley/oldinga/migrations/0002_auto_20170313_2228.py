# -*- coding: utf-8 -*-
# Generated by Django 1.10.6 on 2017-03-13 22:28
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('oldinga', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AnnotationTable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('compound_number', models.IntegerField(db_column='Compound_Number')),
                ('elemental_form', models.CharField(db_column='Elemental_Form', max_length=25)),
                ('name', models.CharField(db_column='Name', max_length=250)),
            ],
            options={
                'db_table': 'Annotation_Table',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BciCongenConspecPlotAnal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ft_id', models.IntegerField(blank=True, null=True)),
                ('iteration', models.IntegerField(blank=True, null=True)),
                ('census', models.IntegerField(blank=True, null=True)),
                ('sp', models.TextField(blank=True, null=True)),
                ('quadrat', models.IntegerField(blank=True, null=True)),
                ('gx', models.DecimalField(blank=True, decimal_places=4, max_digits=8, null=True)),
                ('gy', models.DecimalField(blank=True, decimal_places=4, max_digits=8, null=True)),
                ('life_event', models.TextField(blank=True, null=True)),
                ('dbh', models.IntegerField(blank=True, null=True)),
                ('sc', models.IntegerField(blank=True, null=True)),
                ('norm_agb', models.DecimalField(blank=True, decimal_places=4, max_digits=8, null=True)),
                ('norm_grth', models.DecimalField(blank=True, decimal_places=4, max_digits=8, null=True)),
                ('an', models.DecimalField(blank=True, decimal_places=4, max_digits=8, null=True)),
                ('ba_tot', models.IntegerField(blank=True, null=True)),
                ('ba_cs', models.IntegerField(blank=True, null=True)),
                ('ba_cg', models.IntegerField(blank=True, null=True)),
                ('grow', models.DecimalField(blank=True, decimal_places=4, max_digits=7, null=True)),
                ('grow_sap', models.DecimalField(blank=True, decimal_places=4, max_digits=7, null=True)),
                ('agb', models.DecimalField(blank=True, decimal_places=4, max_digits=7, null=True)),
                ('max_sc', models.IntegerField(blank=True, null=True)),
                ('mort', models.IntegerField(blank=True, null=True)),
                ('rec', models.IntegerField(blank=True, null=True)),
                ('update', models.DateTimeField()),
            ],
            options={
                'db_table': 'BCI_congen_conspec_plot_anal',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BciCongenConspecPlotAnalBackup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ft_id', models.IntegerField(blank=True, null=True)),
                ('iteration', models.IntegerField(blank=True, null=True)),
                ('census', models.IntegerField(blank=True, null=True)),
                ('sp', models.TextField(blank=True, null=True)),
                ('genus', models.TextField(blank=True, null=True)),
                ('quadrat', models.IntegerField(blank=True, null=True)),
                ('gx', models.DecimalField(blank=True, decimal_places=4, max_digits=8, null=True)),
                ('gy', models.DecimalField(blank=True, decimal_places=4, max_digits=8, null=True)),
                ('life_event', models.TextField(blank=True, null=True)),
                ('dbh', models.IntegerField(blank=True, null=True)),
                ('sc', models.IntegerField(blank=True, null=True)),
                ('norm_agb', models.DecimalField(blank=True, decimal_places=4, max_digits=8, null=True)),
                ('norm_grth', models.DecimalField(blank=True, decimal_places=4, max_digits=8, null=True)),
                ('an', models.DecimalField(blank=True, decimal_places=4, max_digits=8, null=True)),
                ('ba_tot', models.IntegerField(blank=True, null=True)),
                ('ba_cs', models.IntegerField(blank=True, null=True)),
                ('ba_cg', models.IntegerField(blank=True, null=True)),
                ('grow', models.DecimalField(blank=True, decimal_places=4, max_digits=7, null=True)),
                ('grow_sap', models.DecimalField(blank=True, decimal_places=4, max_digits=7, null=True)),
                ('agb', models.DecimalField(blank=True, decimal_places=4, max_digits=7, null=True)),
                ('max_sc', models.IntegerField(blank=True, null=True)),
                ('mort', models.IntegerField(blank=True, null=True)),
                ('rec', models.IntegerField(blank=True, null=True)),
                ('update', models.DateTimeField()),
            ],
            options={
                'db_table': 'BCI_congen_conspec_plot_anal_backup',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BciIngaFeb2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ft_id', models.IntegerField(blank=True, null=True)),
                ('iteration', models.IntegerField(blank=True, null=True)),
                ('census', models.IntegerField(blank=True, null=True)),
                ('sp', models.TextField(blank=True, null=True)),
                ('quadrat', models.IntegerField(blank=True, null=True)),
                ('gx', models.DecimalField(blank=True, decimal_places=4, max_digits=8, null=True)),
                ('gy', models.DecimalField(blank=True, decimal_places=4, max_digits=8, null=True)),
                ('life_event', models.TextField(blank=True, null=True)),
                ('dbh', models.IntegerField(blank=True, null=True)),
                ('sc', models.IntegerField(blank=True, null=True)),
                ('norm_agb', models.DecimalField(blank=True, decimal_places=4, max_digits=8, null=True)),
                ('norm_grth', models.DecimalField(blank=True, decimal_places=4, max_digits=8, null=True)),
                ('an', models.DecimalField(blank=True, decimal_places=4, max_digits=8, null=True)),
                ('dbht', models.FloatField(blank=True, null=True)),
                ('dbdhcs', models.FloatField(blank=True, null=True)),
                ('cs', models.FloatField(blank=True, null=True)),
                ('dbhcg', models.FloatField(blank=True, null=True)),
                ('cg', models.FloatField(blank=True, null=True)),
                ('dbhcgp', models.FloatField()),
                ('cgp', models.FloatField(blank=True, null=True)),
                ('dbhhetp', models.FloatField()),
                ('hetp', models.FloatField(blank=True, null=True)),
                ('dbhcgd', models.FloatField()),
                ('cgd', models.FloatField(blank=True, null=True)),
                ('dbhcg_chem', models.FloatField(blank=True, null=True)),
                ('cg_chem', models.FloatField(blank=True, null=True)),
                ('dbhcg_dev', models.FloatField(blank=True, null=True)),
                ('cg_dev', models.FloatField(blank=True, null=True)),
                ('dbhcg_ants', models.FloatField(blank=True, null=True)),
                ('cg_ants', models.FloatField(blank=True, null=True)),
                ('dbhcg_hair', models.FloatField(blank=True, null=True)),
                ('cg_hair', models.FloatField(blank=True, null=True)),
                ('dbhcg_phen', models.FloatField(blank=True, null=True)),
                ('cg_phen', models.FloatField(blank=True, null=True)),
                ('dbhcgnd', models.FloatField()),
                ('cg_nd', models.FloatField(blank=True, null=True)),
                ('dbhcg_element', models.FloatField(blank=True, null=True)),
                ('cg_element', models.FloatField(blank=True, null=True)),
                ('dbhcg_leaf', models.FloatField(blank=True, null=True)),
                ('cg_leaf', models.FloatField(blank=True, null=True)),
                ('dbhcg_wood', models.FloatField(blank=True, null=True)),
                ('cg_wood', models.FloatField(blank=True, null=True)),
                ('dbhcg_height', models.FloatField(blank=True, null=True)),
                ('cg_height', models.FloatField(blank=True, null=True)),
                ('grow', models.DecimalField(blank=True, decimal_places=4, max_digits=7, null=True)),
                ('grow_sap', models.DecimalField(blank=True, decimal_places=4, max_digits=7, null=True)),
                ('agb', models.DecimalField(blank=True, decimal_places=4, max_digits=7, null=True)),
                ('max_sc', models.FloatField(blank=True, null=True)),
                ('mort', models.FloatField(blank=True, null=True)),
                ('rec', models.FloatField(blank=True, null=True)),
                ('update', models.DateTimeField()),
            ],
            options={
                'db_table': 'BCI_INGA_Feb_2',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BciIngaJan11',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ft_id', models.IntegerField(blank=True, null=True)),
                ('iteration', models.IntegerField(blank=True, null=True)),
                ('census', models.IntegerField(blank=True, null=True)),
                ('sp', models.TextField(blank=True, null=True)),
                ('quadrat', models.IntegerField(blank=True, null=True)),
                ('gx', models.DecimalField(blank=True, decimal_places=4, max_digits=8, null=True)),
                ('gy', models.DecimalField(blank=True, decimal_places=4, max_digits=8, null=True)),
                ('life_event', models.TextField(blank=True, null=True)),
                ('dbh', models.IntegerField(blank=True, null=True)),
                ('sc', models.IntegerField(blank=True, null=True)),
                ('norm_agb', models.DecimalField(blank=True, decimal_places=4, max_digits=8, null=True)),
                ('norm_grth', models.DecimalField(blank=True, decimal_places=4, max_digits=8, null=True)),
                ('an', models.DecimalField(blank=True, decimal_places=4, max_digits=8, null=True)),
                ('dbht', models.IntegerField(blank=True, null=True)),
                ('dbdhcs', models.IntegerField(blank=True, null=True)),
                ('dbhcg', models.IntegerField(blank=True, null=True)),
                ('dbhcgp', models.IntegerField()),
                ('dbhhetp', models.IntegerField()),
                ('dbhcgd', models.IntegerField()),
                ('dbhcgnd', models.IntegerField()),
                ('grow', models.DecimalField(blank=True, decimal_places=4, max_digits=7, null=True)),
                ('grow_sap', models.DecimalField(blank=True, decimal_places=4, max_digits=7, null=True)),
                ('agb', models.DecimalField(blank=True, decimal_places=4, max_digits=7, null=True)),
                ('max_sc', models.IntegerField(blank=True, null=True)),
                ('mort', models.IntegerField(blank=True, null=True)),
                ('rec', models.IntegerField(blank=True, null=True)),
                ('update', models.DateTimeField()),
            ],
            options={
                'db_table': 'BCI_INGA_JAN_11',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BciIngaNullFeb2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ft_id', models.IntegerField(blank=True, null=True)),
                ('iteration', models.IntegerField(blank=True, null=True)),
                ('census', models.IntegerField(blank=True, null=True)),
                ('sp', models.TextField(blank=True, null=True)),
                ('quadrat', models.IntegerField(blank=True, null=True)),
                ('gx', models.DecimalField(blank=True, decimal_places=4, max_digits=8, null=True)),
                ('gy', models.DecimalField(blank=True, decimal_places=4, max_digits=8, null=True)),
                ('life_event', models.TextField(blank=True, null=True)),
                ('dbh', models.IntegerField(blank=True, null=True)),
                ('sc', models.IntegerField(blank=True, null=True)),
                ('norm_agb', models.DecimalField(blank=True, decimal_places=4, max_digits=8, null=True)),
                ('norm_grth', models.DecimalField(blank=True, decimal_places=4, max_digits=8, null=True)),
                ('an', models.DecimalField(blank=True, decimal_places=4, max_digits=8, null=True)),
                ('dbht', models.FloatField(blank=True, null=True)),
                ('dbdhcs', models.FloatField(blank=True, null=True)),
                ('cs', models.FloatField(blank=True, null=True)),
                ('dbhcg', models.FloatField(blank=True, null=True)),
                ('cg', models.FloatField(blank=True, null=True)),
                ('dbhcgp', models.FloatField()),
                ('cgp', models.FloatField(blank=True, null=True)),
                ('dbhhetp', models.FloatField()),
                ('hetp', models.FloatField(blank=True, null=True)),
                ('dbhcgd', models.FloatField()),
                ('cgd', models.FloatField(blank=True, null=True)),
                ('dbhcg_chem', models.FloatField(blank=True, null=True)),
                ('cg_chem', models.FloatField(blank=True, null=True)),
                ('dbhcg_dev', models.FloatField(blank=True, null=True)),
                ('cg_dev', models.FloatField(blank=True, null=True)),
                ('dbhcg_ants', models.FloatField(blank=True, null=True)),
                ('cg_ants', models.FloatField(blank=True, null=True)),
                ('dbhcg_hair', models.FloatField(blank=True, null=True)),
                ('cg_hair', models.FloatField(blank=True, null=True)),
                ('dbhcg_phen', models.FloatField(blank=True, null=True)),
                ('cg_phen', models.FloatField(blank=True, null=True)),
                ('dbhcgnd', models.FloatField()),
                ('cg_nd', models.FloatField(blank=True, null=True)),
                ('dbhcg_element', models.FloatField(blank=True, null=True)),
                ('cg_element', models.FloatField(blank=True, null=True)),
                ('dbhcg_leaf', models.FloatField(blank=True, null=True)),
                ('cg_leaf', models.FloatField(blank=True, null=True)),
                ('dbhcg_wood', models.FloatField(blank=True, null=True)),
                ('cg_wood', models.FloatField(blank=True, null=True)),
                ('dbhcg_height', models.FloatField(blank=True, null=True)),
                ('cg_height', models.FloatField(blank=True, null=True)),
                ('grow', models.DecimalField(blank=True, decimal_places=4, max_digits=7, null=True)),
                ('grow_sap', models.DecimalField(blank=True, decimal_places=4, max_digits=7, null=True)),
                ('agb', models.DecimalField(blank=True, decimal_places=4, max_digits=7, null=True)),
                ('max_sc', models.FloatField(blank=True, null=True)),
                ('mort', models.FloatField(blank=True, null=True)),
                ('rec', models.FloatField(blank=True, null=True)),
                ('update', models.DateTimeField()),
            ],
            options={
                'db_table': 'BCI_INGA_NULL_Feb_2',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BciIngaNullJan11',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ft_id', models.IntegerField(blank=True, null=True)),
                ('iteration', models.IntegerField(blank=True, null=True)),
                ('census', models.IntegerField(blank=True, null=True)),
                ('sp', models.TextField(blank=True, null=True)),
                ('quadrat', models.IntegerField(blank=True, null=True)),
                ('gx', models.DecimalField(blank=True, decimal_places=4, max_digits=8, null=True)),
                ('gy', models.DecimalField(blank=True, decimal_places=4, max_digits=8, null=True)),
                ('life_event', models.TextField(blank=True, null=True)),
                ('dbh', models.IntegerField(blank=True, null=True)),
                ('sc', models.IntegerField(blank=True, null=True)),
                ('norm_agb', models.DecimalField(blank=True, decimal_places=4, max_digits=8, null=True)),
                ('norm_grth', models.DecimalField(blank=True, decimal_places=4, max_digits=8, null=True)),
                ('an', models.DecimalField(blank=True, decimal_places=4, max_digits=8, null=True)),
                ('dbht', models.IntegerField(blank=True, null=True)),
                ('dbdhcs', models.IntegerField(blank=True, null=True)),
                ('dbhcg', models.IntegerField(blank=True, null=True)),
                ('dbhcgp', models.IntegerField()),
                ('dbhhetp', models.IntegerField()),
                ('dbhcgd', models.IntegerField()),
                ('dbhcgnd', models.IntegerField()),
                ('grow', models.DecimalField(blank=True, decimal_places=4, max_digits=7, null=True)),
                ('grow_sap', models.DecimalField(blank=True, decimal_places=4, max_digits=7, null=True)),
                ('agb', models.DecimalField(blank=True, decimal_places=4, max_digits=7, null=True)),
                ('max_sc', models.IntegerField(blank=True, null=True)),
                ('mort', models.IntegerField(blank=True, null=True)),
                ('rec', models.IntegerField(blank=True, null=True)),
                ('update', models.DateTimeField()),
            ],
            options={
                'db_table': 'BCI_INGA_NULL_JAN_11',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CompoundTable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('compound_number', models.IntegerField(db_column='Compound_Number')),
                ('pc_id', models.CharField(db_column='PC_ID', max_length=25, unique=True)),
                ('updated', models.DateTimeField()),
            ],
            options={
                'db_table': 'Compound_table',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CompoundTableBci',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('compound_number', models.IntegerField(db_column='Compound_Number')),
                ('pc_id', models.CharField(db_column='PC_ID', max_length=25, unique=True)),
                ('updated', models.DateTimeField()),
            ],
            options={
                'db_table': 'Compound_table_BCI',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CompoundTicTable',
            fields=[
                ('ct_id', models.AutoField(primary_key=True, serialize=False)),
                ('ct_compound_number', models.IntegerField()),
                ('ct_compound_sample', models.CharField(max_length=25)),
                ('ct_tic', models.FloatField()),
            ],
            options={
                'db_table': 'Compound_tic_table',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CompoundTicTableBci',
            fields=[
                ('ct_id', models.AutoField(primary_key=True, serialize=False)),
                ('ct_compound_number', models.IntegerField()),
                ('ct_compound_sample', models.CharField(max_length=25)),
                ('ct_tic', models.FloatField()),
            ],
            options={
                'db_table': 'Compound_tic_table_BCI',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ConvertedPaths',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('conv_dn', models.CharField(db_column='conv.dn', max_length=100, unique=True)),
                ('filename', models.CharField(max_length=100)),
                ('filepath', models.CharField(max_length=250)),
            ],
            options={
                'db_table': 'Converted_paths',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DeleteValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dv_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'delete_value',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FeatureTableRawData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sample', models.CharField(max_length=25)),
                ('species_code_sample', models.CharField(blank=True, db_column='Species_code_sample', max_length=25, null=True)),
                ('rt', models.DecimalField(db_column='RT', decimal_places=4, max_digits=11)),
                ('mz', models.DecimalField(db_column='MZ', decimal_places=4, max_digits=11)),
                ('pc_id', models.CharField(db_column='PC_ID', max_length=25)),
                ('tic', models.DecimalField(db_column='TIC', decimal_places=4, max_digits=11)),
                ('date_update', models.DateTimeField(blank=True, db_column='Date_Update', null=True)),
            ],
            options={
                'db_table': 'feature_table_raw_data',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FeatureTableRawDataAllBci',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sample', models.CharField(max_length=25)),
                ('species_code_sample', models.CharField(blank=True, db_column='Species_code_sample', max_length=25, null=True)),
                ('rt', models.DecimalField(db_column='RT', decimal_places=4, max_digits=11)),
                ('mz', models.DecimalField(db_column='MZ', decimal_places=4, max_digits=11)),
                ('pc_id', models.CharField(db_column='PC_ID', max_length=25)),
                ('tic', models.DecimalField(db_column='TIC', decimal_places=4, max_digits=11)),
                ('date_update', models.DateTimeField(blank=True, db_column='Date_Update', null=True)),
            ],
            options={
                'db_table': 'feature_table_raw_data_all_BCI',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FeatureTableRawDataJohanna',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sample', models.CharField(max_length=25)),
                ('species_code_sample', models.CharField(blank=True, db_column='Species_code_sample', max_length=25, null=True)),
                ('rt', models.DecimalField(db_column='RT', decimal_places=4, max_digits=11)),
                ('mz', models.DecimalField(db_column='MZ', decimal_places=4, max_digits=11)),
                ('pc_id', models.CharField(db_column='PC_ID', max_length=25)),
                ('tic', models.DecimalField(db_column='TIC', decimal_places=4, max_digits=11)),
                ('date_update', models.DateTimeField(blank=True, db_column='Date_Update', null=True)),
            ],
            options={
                'db_table': 'feature_table_raw_data_johanna',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FeatureTableRawDataUmbellifera',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sample', models.CharField(max_length=25)),
                ('species_code_sample', models.CharField(blank=True, db_column='Species_code_sample', max_length=25, null=True)),
                ('rt', models.DecimalField(db_column='RT', decimal_places=4, max_digits=11)),
                ('mz', models.DecimalField(db_column='MZ', decimal_places=4, max_digits=11)),
                ('pc_id', models.CharField(db_column='PC_ID', max_length=25)),
                ('tic', models.DecimalField(db_column='TIC', decimal_places=4, max_digits=11)),
                ('date_update', models.DateTimeField(blank=True, db_column='Date_Update', null=True)),
            ],
            options={
                'db_table': 'feature_table_raw_data_umbellifera',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FinalMul',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fid_orig', models.IntegerField(blank=True, db_column='FId_orig', null=True)),
                ('fid_dest', models.IntegerField(blank=True, db_column='FId_dest', null=True)),
            ],
            options={
                'db_table': 'final_mul',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Ident1',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('id1_grupo1', models.CharField(blank=True, db_column='Id1_Grupo1', max_length=25, null=True)),
                ('id1_grupo2', models.CharField(blank=True, db_column='Id1_Grupo2', max_length=25, null=True)),
            ],
            options={
                'db_table': 'Ident_1',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Ident2',
            fields=[
                ('id2_id', models.AutoField(db_column='Id2_ID', primary_key=True, serialize=False)),
                ('id2_grupo1', models.CharField(db_column='Id2_grupo1', max_length=25)),
            ],
            options={
                'db_table': 'Ident_2',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='InsertValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('iv_group', models.CharField(blank=True, max_length=25, null=True)),
            ],
            options={
                'db_table': 'insert_value',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='InsertValueDet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('iv_group1', models.CharField(blank=True, max_length=25, null=True)),
                ('iv_group2', models.CharField(blank=True, max_length=25, null=True)),
            ],
            options={
                'db_table': 'insert_value_det',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Multiple',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mul_id_orig', models.IntegerField(blank=True, null=True)),
                ('mul_id_destino', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'multiple',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MultipleValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_orig', models.IntegerField()),
                ('id_destino', models.IntegerField()),
                ('min_rt_dest', models.FloatField()),
                ('rt_orig', models.FloatField()),
                ('max_rt_dest', models.FloatField()),
            ],
            options={
                'db_table': 'multiple_value',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MultipleValueMz',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('m_id_orig', models.IntegerField()),
                ('m_id_destino', models.IntegerField()),
                ('m_min_mz_dest', models.FloatField(blank=True, null=True)),
                ('m_mz_orig', models.FloatField(blank=True, null=True)),
                ('m_max_mz_dest', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'multiple_value_mz',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcId',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pc_id', models.CharField(db_column='PC_ID', max_length=25)),
                ('mz_rt', models.CharField(db_column='MZ_RT', max_length=25)),
                ('percent_tic', models.DecimalField(db_column='Percent_TIC', decimal_places=6, max_digits=20)),
                ('average_tic', models.FloatField(db_column='Average_Tic')),
                ('ms_ms_spec', models.TextField(blank=True, db_column='MS_MS_Spec', null=True)),
                ('ms_ms_spec_id', models.IntegerField(blank=True, db_column='MS_MS_Spec_ID', null=True)),
                ('updated', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'PC_ID',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PcIdBci',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pc_id', models.CharField(db_column='PC_ID', max_length=25)),
                ('mz_rt', models.CharField(db_column='MZ_RT', max_length=25)),
                ('percent_tic', models.DecimalField(db_column='Percent_TIC', decimal_places=6, max_digits=20)),
                ('average_tic', models.FloatField(db_column='Average_Tic')),
                ('ms_ms_spec', models.TextField(blank=True, db_column='MS_MS_Spec', null=True)),
                ('ms_ms_spec_id', models.IntegerField(blank=True, db_column='MS_MS_Spec_ID', null=True)),
                ('updated', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'PC_ID_BCI',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PeakTableV1',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mz_rt', models.CharField(db_column='MZ_RT', max_length=20)),
                ('mz', models.IntegerField(db_column='MZ')),
                ('rt', models.IntegerField(db_column='RT')),
            ],
            options={
                'db_table': 'Peak_Table_V1',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PreliminaryPeakTableBci',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('archivo', models.CharField(max_length=20)),
                ('mz_rt', models.CharField(max_length=20)),
                ('rt_round', models.CharField(max_length=20)),
                ('mz_round', models.CharField(max_length=20)),
                ('mz', models.CharField(max_length=20)),
                ('mzmin', models.CharField(max_length=20)),
                ('mzmax', models.CharField(max_length=20)),
                ('rt', models.CharField(max_length=20)),
                ('rtmin', models.CharField(max_length=20)),
                ('rtmax', models.CharField(max_length=20)),
                ('npeaks', models.CharField(max_length=20)),
                ('blank', models.CharField(db_column='Blank', max_length=20)),
                ('ing', models.CharField(db_column='Ing', max_length=20)),
                ('bn_1', models.CharField(db_column='BN_1', max_length=20)),
                ('bn_2', models.CharField(db_column='BN_2', max_length=20)),
                ('bn_3', models.CharField(db_column='BN_3', max_length=20)),
                ('ing_1', models.CharField(db_column='Ing_1', max_length=20)),
                ('ing_2', models.CharField(db_column='Ing_2', max_length=20)),
                ('ing_3', models.CharField(db_column='Ing_3', max_length=20)),
                ('ing_4', models.CharField(db_column='Ing_4', max_length=20)),
                ('ing_5', models.CharField(db_column='Ing_5', max_length=20)),
                ('isotopes', models.CharField(max_length=20)),
                ('adduct', models.CharField(max_length=20)),
                ('pcgroup', models.CharField(max_length=20)),
                ('tic_average', models.CharField(db_column='TIC_Average', max_length=20)),
                ('tic_average2', models.CharField(db_column='TIC_Average2', max_length=20)),
                ('db_match', models.CharField(db_column='DB_Match', max_length=500)),
                ('pc_group_identifier', models.CharField(db_column='PC_Group_Identifier', max_length=20)),
            ],
            options={
                'db_table': 'Preliminary_peak_table_bci',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProccessedRtiNeg',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rti', models.CharField(db_column='RTI', max_length=50)),
                ('file', models.CharField(blank=True, db_column='FILE', max_length=50, null=True)),
                ('batch', models.CharField(blank=True, db_column='Batch', max_length=6, null=True)),
                ('injection', models.IntegerField(blank=True, db_column='Injection', null=True)),
                ('npeaks', models.IntegerField(blank=True, null=True)),
                ('avg_ppm_abs', models.FloatField(blank=True, null=True)),
                ('avg_ppm', models.FloatField(blank=True, null=True)),
                ('avg_rerror_abs', models.FloatField(blank=True, null=True)),
                ('avg_rerror', models.FloatField(blank=True, null=True)),
                ('avg_tic_int', models.IntegerField(blank=True, db_column='avg_TIC_int', null=True)),
                ('avg_sn', models.IntegerField(blank=True, db_column='avg_SN', null=True)),
                ('avg_pkwidth', models.FloatField(blank=True, null=True)),
                ('cat_co2', models.DecimalField(blank=True, db_column='cat_Co2', decimal_places=0, max_digits=10, null=True)),
                ('cat_1', models.DecimalField(blank=True, db_column='Cat_1', decimal_places=0, max_digits=10, null=True)),
                ('cat_2', models.DecimalField(blank=True, db_column='Cat_2', decimal_places=0, max_digits=10, null=True)),
                ('cat_3', models.DecimalField(blank=True, db_column='Cat_3', decimal_places=0, max_digits=10, null=True)),
                ('mor_1', models.DecimalField(blank=True, db_column='Mor_1', decimal_places=0, max_digits=10, null=True)),
                ('mor_2', models.DecimalField(blank=True, db_column='Mor_2', decimal_places=0, max_digits=10, null=True)),
                ('mor_3', models.DecimalField(blank=True, db_column='Mor_3', decimal_places=0, max_digits=10, null=True)),
                ('mor_4', models.DecimalField(blank=True, db_column='Mor_4', decimal_places=0, max_digits=10, null=True)),
                ('trypt_1', models.DecimalField(blank=True, db_column='Trypt_1', decimal_places=0, max_digits=10, null=True)),
                ('notes', models.TextField(blank=True, db_column='NOTES', null=True)),
            ],
            options={
                'db_table': 'Proccessed_RTI_NEG',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RtiQcV5Backup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rti', models.CharField(db_column='RTI', max_length=25)),
                ('standard', models.CharField(db_column='Standard', max_length=35)),
                ('ion_type', models.CharField(max_length=5)),
                ('mz', models.FloatField()),
                ('ppm_abs', models.FloatField()),
                ('ppm', models.FloatField()),
                ('mda_abs', models.FloatField()),
                ('mda', models.FloatField()),
                ('rt_in_min', models.FloatField()),
                ('rerror_abs', models.FloatField()),
                ('rerror', models.FloatField()),
                ('tic_into', models.IntegerField(db_column='TIC_into')),
                ('tic_intb', models.IntegerField(db_column='TIC_intb')),
                ('tic_maxo', models.IntegerField(db_column='TIC_maxo')),
                ('sn', models.IntegerField()),
                ('file', models.CharField(db_column='FILE', max_length=50)),
                ('notes', models.CharField(db_column='Notes', max_length=255)),
                ('updated', models.DateTimeField(db_column='Updated')),
            ],
            options={
                'db_table': 'RTI_QC_V5_backup',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RtiQcV6Backup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rti', models.CharField(db_column='RTI', max_length=25)),
                ('batch', models.CharField(db_column='Batch', max_length=5)),
                ('injection', models.IntegerField(blank=True, db_column='Injection', null=True)),
                ('standard', models.CharField(db_column='Standard', max_length=35)),
                ('ion_type', models.CharField(max_length=5)),
                ('mz', models.FloatField()),
                ('ppm_abs', models.FloatField()),
                ('ppm', models.FloatField()),
                ('mda_abs', models.FloatField()),
                ('mda', models.FloatField()),
                ('rt_in_min', models.FloatField()),
                ('rerror_abs', models.FloatField()),
                ('rerror', models.FloatField()),
                ('tic_into', models.IntegerField(db_column='TIC_into')),
                ('tic_intb', models.IntegerField(db_column='TIC_intb')),
                ('tic_maxo', models.IntegerField(db_column='TIC_maxo')),
                ('sn', models.IntegerField()),
                ('pkwidth', models.DecimalField(decimal_places=3, max_digits=5)),
                ('file', models.CharField(db_column='FILE', max_length=50)),
                ('notes', models.CharField(db_column='Notes', max_length=255)),
                ('updated', models.DateTimeField(db_column='Updated')),
            ],
            options={
                'db_table': 'RTI_QC_V6_backup',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RtiReports',
            fields=[
                ('rti', models.CharField(db_column='RTI', max_length=50, primary_key=True, serialize=False)),
                ('report_link', models.CharField(max_length=400)),
            ],
            options={
                'db_table': 'RTI_REPORTS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SamplePaths',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('raw_dn', models.CharField(db_column='raw.dn', max_length=100, unique=True)),
                ('raw_filename', models.CharField(db_column='raw.filename', max_length=100)),
                ('raw_path', models.CharField(db_column='raw.path', max_length=250)),
            ],
            options={
                'db_table': 'Sample_Paths',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TempDbname',
            fields=[
                ('td_id', models.AutoField(db_column='Td_id', primary_key=True, serialize=False)),
                ('td_number', models.IntegerField(db_column='Td_Number')),
                ('td_group', models.CharField(db_column='Td_Group', max_length=25)),
                ('td_name', models.CharField(db_column='Td_Name', max_length=100)),
            ],
            options={
                'db_table': 'Temp_DBName',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TotalTempDiv',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tt_pc_id', models.CharField(blank=True, max_length=25, null=True)),
                ('tt_total', models.FloatField(blank=True, null=True)),
                ('tt_average', models.FloatField()),
            ],
            options={
                'db_table': 'Total_temp_div',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TyrosineCalibration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('calibration_number', models.IntegerField(db_column='Calibration_Number')),
                ('month', models.CharField(db_column='Month', max_length=11)),
                ('day', models.IntegerField(db_column='Day')),
                ('year', models.IntegerField(db_column='Year')),
                ('concentration', models.IntegerField(db_column='Concentration')),
                ('area', models.IntegerField(db_column='Area')),
                ('m_slope', models.IntegerField()),
                ('b_intercept', models.IntegerField()),
                ('r_squared', models.CharField(db_column='R_squared', max_length=5)),
                ('notes', models.CharField(db_column='Notes', max_length=155)),
                ('updated', models.DateTimeField()),
            ],
            options={
                'db_table': 'Tyrosine_Calibration',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UmbAnalysis',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('compound_number', models.CharField(db_column='Compound_Number', max_length=10)),
                ('mz_rt', models.CharField(db_column='MZ_RT', max_length=20)),
                ('mz_round', models.IntegerField(db_column='MZ_Round')),
                ('rt_round', models.IntegerField(db_column='RT_ROUND')),
                ('tic_average', models.IntegerField(db_column='TIC_Average')),
                ('isotopes', models.CharField(db_column='Isotopes', max_length=100)),
                ('adduct', models.CharField(max_length=100)),
                ('pcgroup', models.IntegerField()),
                ('isotope_number', models.IntegerField()),
                ('notes', models.CharField(db_column='Notes', max_length=155)),
                ('primary_peak', models.IntegerField(db_column='Primary_Peak')),
            ],
            options={
                'db_table': 'Umb_Analysis',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UniqueValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uv_identidad', models.IntegerField()),
                ('uv_grupo', models.CharField(blank=True, max_length=20, null=True)),
                ('uv_min_rt', models.FloatField(blank=True, null=True)),
                ('uv_rt', models.FloatField(blank=True, null=True)),
                ('uv_max_rt', models.FloatField(blank=True, null=True)),
                ('uv_min_mz', models.FloatField(blank=True, null=True)),
                ('uv_mz', models.FloatField(blank=True, null=True)),
                ('uv_max_mz', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'unique_value',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UplcPressure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sample_name', models.CharField(max_length=30)),
                ('max_pressure', models.DecimalField(decimal_places=0, max_digits=10)),
                ('date', models.DateField()),
            ],
            options={
                'db_table': 'UPLC_pressure',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UplcResultsBackup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('diva_field', models.CharField(db_column='Diva#', max_length=50)),
                ('file_name', models.CharField(db_column='File_Name', max_length=50)),
                ('year', models.IntegerField(blank=True, db_column='Year', null=True)),
                ('month', models.CharField(blank=True, db_column='Month', max_length=10, null=True)),
                ('day', models.IntegerField(blank=True, db_column='Day', null=True)),
                ('mode', models.TextField(blank=True, db_column='Mode', null=True)),
                ('sample_type', models.CharField(db_column='Sample_Type', max_length=15)),
                ('sample_id', models.CharField(blank=True, db_column='Sample_ID', max_length=25, null=True)),
                ('en_field', models.IntegerField(blank=True, db_column='EN#', null=True)),
                ('chem_field', models.CharField(blank=True, db_column='Chem#', max_length=25, null=True)),
                ('plant_field', models.CharField(blank=True, db_column='Plant#', max_length=15, null=True)),
                ('species_code', models.CharField(max_length=11)),
                ('tune_page', models.CharField(db_column='Tune_Page', max_length=55)),
                ('project_name', models.CharField(db_column='Project_Name', max_length=55)),
                ('ms_method', models.CharField(db_column='MS_Method', max_length=55)),
                ('uplc_method', models.CharField(db_column='UPLC_Method', max_length=55)),
                ('ms_mode', models.IntegerField(blank=True, db_column='MS_Mode', null=True)),
                ('asoc_blank', models.CharField(blank=True, db_column='Asoc_Blank', max_length=45, null=True)),
                ('asoc_rti', models.CharField(blank=True, db_column='Asoc_RTI', max_length=45, null=True)),
                ('rti_pass', models.TextField(blank=True, db_column='RTI_PASS', null=True)),
                ('notes', models.CharField(blank=True, db_column='Notes', max_length=155, null=True)),
                ('all_inga', models.CharField(blank=True, db_column='All_Inga', max_length=5, null=True)),
                ('chemocoding', models.CharField(blank=True, db_column='Chemocoding', max_length=5, null=True)),
                ('raw_check', models.TextField(db_column='Raw_Check')),
                ('mzxml', models.TextField(db_column='mzXML')),
                ('updated', models.DateTimeField(db_column='Updated')),
            ],
            options={
                'db_table': 'UPLC_Results_backup',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UplcResultsBackup2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('diva_field', models.CharField(db_column='Diva#', max_length=30)),
                ('file_name', models.CharField(db_column='File_Name', max_length=30)),
                ('year', models.IntegerField(blank=True, db_column='Year', null=True)),
                ('month', models.CharField(blank=True, db_column='Month', max_length=10, null=True)),
                ('day', models.IntegerField(blank=True, db_column='Day', null=True)),
                ('mode', models.TextField(blank=True, db_column='Mode', null=True)),
                ('sample_type', models.CharField(db_column='Sample_Type', max_length=15)),
                ('sample_id', models.CharField(blank=True, db_column='Sample_ID', max_length=25, null=True)),
                ('en_field', models.IntegerField(db_column='EN#')),
                ('chem_field', models.CharField(blank=True, db_column='Chem#', max_length=25, null=True)),
                ('plant_field', models.CharField(blank=True, db_column='Plant#', max_length=15, null=True)),
                ('species_code', models.CharField(max_length=11)),
                ('tune_page', models.CharField(db_column='Tune_Page', max_length=55)),
                ('project_name', models.CharField(db_column='Project_Name', max_length=55)),
                ('ms_method', models.CharField(db_column='MS_Method', max_length=55)),
                ('uplc_method', models.CharField(db_column='UPLC_Method', max_length=55)),
                ('ms_mode', models.IntegerField(blank=True, db_column='MS_Mode', null=True)),
                ('asoc_blank', models.CharField(blank=True, db_column='Asoc_Blank', max_length=45, null=True)),
                ('asoc_rti', models.CharField(blank=True, db_column='Asoc_RTI', max_length=45, null=True)),
                ('rti_pass', models.TextField(blank=True, db_column='RTI_PASS', null=True)),
                ('notes', models.CharField(blank=True, db_column='Notes', max_length=155, null=True)),
                ('all_inga', models.CharField(blank=True, db_column='All_Inga', max_length=5, null=True)),
                ('chemocoding', models.CharField(blank=True, db_column='Chemocoding', max_length=5, null=True)),
                ('raw_check', models.TextField(db_column='Raw_Check')),
                ('mzxml', models.TextField(db_column='mzXML')),
                ('updated', models.DateTimeField(db_column='Updated')),
            ],
            options={
                'db_table': 'UPLC_Results_backup2',
                'managed': False,
            },
        ),
        migrations.AlterModelTable(
            name='expansion',
            table='Expansion',
        ),
        migrations.AlterModelTable(
            name='extraction',
            table='Extraction',
        ),
        migrations.AlterModelTable(
            name='field',
            table='Field',
        ),
        migrations.AlterModelTable(
            name='location',
            table='Location',
        ),
        migrations.AlterModelTable(
            name='motu',
            table='MOTU',
        ),
        migrations.AlterModelTable(
            name='planttable',
            table='Plant_Table',
        ),
        migrations.AlterModelTable(
            name='rtiqc',
            table='RTI_QC',
        ),
        migrations.AlterModelTable(
            name='species',
            table='Species',
        ),
        migrations.AlterModelTable(
            name='tyrosine',
            table='Tyrosine',
        ),
        migrations.AlterModelTable(
            name='uplcresults',
            table='UPLC_Results',
        ),
    ]
